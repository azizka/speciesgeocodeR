rec <- RichnessGrid(out, reso = 1)
str(out)
out$species <- as.character(out$species)
str(out)
rec <- RichnessGrid(out, reso = 1)
x <- out
if (class(x) == "spgeoOUT") {
dum <- data.frame(species = x$species_in, x$species_coordinates_in)
x <- dum
}
if(is.data.frame(x)){
x <- subset(x, select =  c("species", "decimallongitude", "decimallatitude"))
}
head(x)
pts <- SpatialPoints(x[, c("decimallongitude", "decimallatitude")])
e <- extent(pts)
ras <- raster(e)
res(ras) <- reso
reso = 1
res(ras) <- reso
ras <- setValues(ras, 0)
ras
plot(ras)
inp <- split(x, f = as.character(x$species))
lapply(inp, function(k) .rasterSum(k, ras, type = "div"))
.rasterSum <- function(x, ras, type) {
po <- SpatialPoints(x[, 2:3])
ras_sub <- rasterize(po, ras, fun = "count")
if(type == "div"){
ras_sub[ras_sub >= 1] <- 1
}
ras_sub[is.na(ras_sub)] <- 0
return(ras_sub)
}
lapply(inp, function(k) .rasterSum(k, ras, type = "div"))
out <- Reduce("+", rast)
out <- Reduce("+", out)
typw = "spnum"
type = "spnum"
out <- switch(type,
spnum = {
inp <- split(x, f = as.character(x$species))
lapply(inp, function(k) .rasterSum(k, ras, type = "div"))
}
abu = .rasterSum(pts, ras, type = ""))
out <- switch(type,
spnum = {
inp <- split(x, f = as.character(x$species))
lapply(inp, function(k) .rasterSum(k, ras, type = "div"))
},
abu = .rasterSum(pts, ras, type = ""))
out
out <- Reduce("+", out)
out[out == 0] <- NA
plot(out)
library(speciesgeocodeR)
sp <- RichnessGrid(out, reso = 1, "spnum")
head(out)
dat <- read.csv("C:/Users/alexander.zizka/Dropbox (Antonelli Lab)/Arbeit/Gothenburg/Conferences/2016_11_Antonelli_lab_meeting/spatial_data_workshop/0026470-160910150852091.csv", sep = "\t")
#Basis of record
table(dat$basisofrecord)
out <- subset(dat, dat$basisofrecord != "FOSSIL_SPECIMEN")
out <- subset(out, out$basisofrecord != "UNKOWN")
#Country information available
out <- subset(out, out$countrycode != "")
#check coordinate uncertainty, the precision of the climate data used later on is approximately 10x10 km
hist(out$coordinateuncertaintyinmeter/1000, breaks = 100)
median(out$coordinateuncertainty, na.rm = T)
nrow(out[out$coordinateuncertainty > 10000,])/nrow(out)
#visualize
map("world")
points(out$decimallongitude, out$decimallatitude)
rec <- RichnessGrid(out, reso = 1)
rec <- RichnessGrid(out, reso = 1)
plot(rec)
nrow(out)
nrow(dat)
lapply(out$species, function(x) x[2]) == ""
sum(lapply(out$species, function(x) x[2]) == "")
out[!grep("sp.", out$species),]
out[!grep("sp.", out$species),]
grep("sp.", out$species)
out[grep("sp.", out$species),]
out[grep("sp.", out$species), "species"]
grep("sp\\.", out$species)
out[grep("sp\\.", out$species),]
which(grep("sp\\.", out$species))
lapply(out$species, function(x) x[2]) == "sp"
out[lapply(out$species, function(x) x[2]) == "sp"]
out[!lapply(out$species, function(x) x[2]) == "sp"]
out <- out[!lapply(out$species, function(x) x[2]) == "",]
nrow(out)
out <- out[!lapply(out$species, function(x) x[2]) == "sp",]
head(out)
levels(out$species)
paste(lapply(out$species, function(x) x[1]), lapply(tt, function(x) x[2]), sep = " ")
apply(tt, function(x) x[2])
lapply(tt, function(x) x[2])
lapply(out$species, function(x) x[2])
test <- strsplit(out$species, split = " ")
test <- strsplit(as.character(out$species), split = " ")
head(test)
lapply(out$species, function(x) x[2]) == ""
sum(lapply(out$species, function(x) x[2]) == "")
sum(lapply(out$species, function(x) x[2]) == "sp")
out <- out[!lapply(out$species, function(x) x[2]) == "",]
#excludes entries with sp. as species epithet
out <- out[!lapply(out$species, function(x) x[2]) == "sp",]
nrow(out)
paste(lapply(out$species, function(x) x[1]), lapply(as.characterout$species, function(x) x[2]), sep = " ")
out$species <- paste(test, function(x) x[1]), lapply(test, function(x) x[2]), sep = " ")
out$species <- paste(test, function(x) x[1], lapply(test, function(x) x[2]), sep = " ")
lapply(test, function(x) x[1])
paste(lapply(test, function(x) x[1]), lapply(test, function(x) x[2]), sep = " ")
is.na(out$species)
sum(is.na(out$species))
sum(is.na(test))
lapply(test, function(x) x[1])
out[9998,]
out$taxonrank
out <- out[out$taxonrank == "SPECIES"]
nrowout
nrow(out)
levels(out$taxonrank)
?out$species == ""
sum(out$species == "")
out <- out[out$species == "", ]
levels(out$taxonrank)
out <- out[!is.na(out$species)]
out <- out[!is.na(out$species),]
unique(out$taxonrank)
dat <- read.csv("C:/Users/alexander.zizka/Dropbox (Antonelli Lab)/Arbeit/Gothenburg/Conferences/2016_11_Antonelli_lab_meeting/spatial_data_workshop/0026470-160910150852091.csv", sep = "\t")
#Basis of record
table(dat$basisofrecord)
out <- subset(dat, dat$basisofrecord != "FOSSIL_SPECIMEN")
out <- subset(out, out$basisofrecord != "UNKOWN")
#Country information available
out <- subset(out, out$countrycode != "")
#check coordinate uncertainty, the precision of the climate data used later on is approximately 10x10 km
hist(out$coordinateuncertaintyinmeter/1000, breaks = 100)
median(out$coordinateuncertainty, na.rm = T)
nrow(out[out$coordinateuncertainty > 10000,])/nrow(out)
#visualize
map("world")
points(out$decimallongitude, out$decimallatitude)
rec <- RichnessGrid(out, reso = 1)
test <- strsplit(as.character(out$species), split = " ")
#only species with full species name
out <- out[!out$species == "", ]
unique(out$taxonrank)
out <- out[out$taxonrank %in% c("SPECIES", "SUBSPECIES"),]
lapply(test, function(x) x[2]) == "sp"
lapply(test, function(x) x[2])
out[9998,]
test <- strsplit(as.character(out$species), split = " ")
lapply(test, function(x) x[2]) == "sp"
out <- out[!lapply(test, function(x) x[2]) == "sp", ]
out$species <- paste(lapply(test, function(x) x[1]), lapply(test, function(x) x[2]), sep = " ")
head(out$species)
?CleanCoordinates
test <- CleanCoordinates(x = out[,c("decimallongitude", "decimallatitude")],
species = out[,"species"],
countries = out[,"countrycode"])
out$countrycode
nrow(dat)
nrow(out)
occ(query = 'Adansonia digitta', from = 'gbif'))
library(spocc)
occ(query = 'Adansonia digitta', from = 'gbif'))
dat <- occ(query = 'Adansonia digitta', from = 'gbif')
dat
dat <- occ(query = 'Adansonia digitata', from = 'gbif')
dat
head(dat)
?spocc
occ2df(dat)
?occ
dat <- occ(query = 'Artiodactyla', from = 'gbif')
dat
dat <- occ(query = 'Artiodactyla', from = 'gbif', geometry = 'Polygon(())', gbifopts = 'fields = c("species", "longitude", "latitude", "countrycode")')
dat
dat <- occ(query = 'Artiodactyla', from = 'gbif', geometry = 'Polygon(())', gbifopts = 'fields = c("species", "longitude", "latitude", "countrycode")')
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'Polygon((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
gbifopts = 'fields = c("species", "longitude", "latitude", "countrycode")')
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'Polygon((-20 37, -20 -35, 52 -35, 52 37, -20 37))')#,
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'Polygon((-20 37, -20 -35, 52 -35, 52 37, -20 37))')
install.packages("spocc")
install.packages("spocc")
require(spocc)
require(rworldmaps)
require(taxize)
require(scrubr)
require(devtools)
require(shiny)
require(DT)
require(speciesgeocodeR)
require(maps)
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'Polygon ((-20 37, -20 -35, 52 -35, 52 37, -20 37))')#,
?occ_Search
occ_search
?occ_search
occ_search(scientificName = 'Artiodactyla', from = 'gbif',
geometry = 'Polygon ((-20 37, -20 -35, 52 -35, 52 37, -20 37))')
library(rgbif)
occ_search(scientificName = 'Artiodactyla', from = 'gbif',
geometry = 'Polygon ((-20 37, -20 -35, 52 -35, 52 37, -20 37))')
dat <- occ(scientificName = 'Artiodactyla', from = 'gbif',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))')
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))')#
dat
dat <- occ2df(dat)
head(dat)
is(dat)
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
gbifopts = 'fields = c("species", "longitude", "latitude", "countrycode")')
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))')
?occ
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
gbifopts = list(fields = c("species", "longitude", "latitude", "countrycode"))
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
gbifopts = list(fields = c("species", "longitude", "latitude", "countrycode")))
dat <- occ2df(dat)
head(dat)
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
gbifopts = list(fields = c("species", "longitude", "latitude", "countrycode")))
head(Dat)
head(dat)
?occ2df
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
gbifopts = list(fields = c("species", "longitude", "latitude", "countrycode"),
hasCoordiante = TRUE)
dat <- occ(query = 'Artiodactyla', from = 'gbif',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
gbifopts = list(fields = c("species", "longitude", "latitude", "countrycode"),
hasCoordiante = TRUE))
str(dat)
dat@data
dat$gbif$data$Artiodactyla
data.frame(dat$gbif$data$Artiodactyla)
?occ_Search
?occ_search
dat2<- occ2df(dat)
str(dat2)
help(rgbif)
?occ_search
dat <- read.csv("C:/Users/alexander.zizka/Dropbox (Antonelli Lab)/Arbeit/Gothenburg/Conferences/2016_11_Antonelli_lab_meeting/spatial_data_workshop/0026470-160910150852091.csv", sep = "\t")
```
dat <- read.csv("C:/Users/alexander.zizka/Dropbox (Antonelli Lab)/Arbeit/Gothenburg/Conferences/2016_11_Antonelli_lab_meeting/spatial_data_workshop/0026470-160910150852091.csv", sep = "\t")
head(dat)
dat <- occ_search(scientificName = 'Artiodactyla',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
fields = c("gbifid", "species", "decimallongitude", "decimallatitude", "coordinateuncertaintyinmeters", "countrycode", "basisofrecord"),
return = "data"
limit = 100000,
hasCoordiante = TRUE))
dat <- occ_search(scientificName = 'Artiodactyla',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
fields = c("gbifid", "species", "decimallongitude", "decimallatitude",
"coordinateuncertaintyinmeters", "countrycode", "basisofrecord"),
return = "data"
limit = 100000,
hasCoordiante = TRUE)
dat <- occ_search(scientificName = 'Artiodactyla',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
fields = c("gbifid", "species", "decimallongitude", "decimallatitude",
"coordinateuncertaintyinmeters", "countrycode", "basisofrecord"),
return = "data",
limit = 100000,
hasCoordiante = TRUE)
dat <- occ_search(scientificName = 'Artiodactyla',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
fields = c("gbifid", "species", "decimallongitude", "decimallatitude",
"coordinateuncertaintyinmeters", "countrycode", "basisofrecord"),
return = "data",
limit = 100000,
hasCoordinate = TRUE)
dat <- occ_search(scientificName = 'Artiodactyla',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
fields = c("gbifid", "species", "decimallongitude", "decimallatitude",
"coordinateuncertaintyinmeters", "countrycode", "basisofrecord"),
return = "data",
limit = 10000,
hasCoordinate = TRUE)
dat <- occ_search(scientificName = 'Artiodactyla',
geometry = 'POLYGON ((-20 37, -20 -35, 52 -35, 52 37, -20 37))',
fields = c("gbifid", "species", "decimallongitude", "decimallatitude",
"coordinateuncertaintyinmeters", "countrycode", "basisofrecord"),
return = "data",
limit = 2,
hasCoordinate = TRUE)
head(Dat)
head(dat)
dat
str(dat)
occ_search(scientificName = "Ursus americanus", fields=c('name','basisOfRecord','protocol'), limit = 20)
occ_search(scientificName = "Ursus americanus", fields=c('name','basisOfRecord','protocol'), limit = 20, return = data)
occ_search(scientificName = "Ursus americanus", fields=c('name','basisOfRecord','protocol'), limit = 20, return = "data")
occ_search(scientificName = "Artidactyla", fields=c('name','basisOfRecord','protocol'), limit = 20, return = "data")
occ_search(scientificName = "Artiodactyla", fields=c('name','basisOfRecord','protocol'), limit = 20, return = "data")
occ_search(scientificName = "Artiodactyla", fields=c("gbifid",'name','basisOfRecord','protocol'), limit = 20, return = "data")
occ_search(scientificName = "Artiodactyla", continent = "africa",
fields=c('name','basisOfRecord','protocol', 'longitude'), limit = 20, return = "data")
occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 20)
occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 20,
fields = c('name','decimalLongitude', 'decimalLatitude'))
occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 20,
fields = c('name','decimalLongitude', 'decimalLatitude', 'basisOfRecord', 'taxonRank', 'continent', 'countryCode'))
occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 20, hasCoordinate = TRUE,
fields = c('name','decimalLongitude', 'decimalLatitude', 'basisOfRecord', 'taxonRank', 'continent', 'countryCode'))
dat <- read.csv("C:/Users/alexander.zizka/Dropbox (Antonelli Lab)/Arbeit/Gothenburg/Conferences/2016_11_Antonelli_lab_meeting/spatial_data_workshop/0026470-160910150852091.csv", sep = "\t")
names(dat)
occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 20, hasCoordinate = TRUE,
fields = c('name','decimalLongitude', 'decimalLatitude', 'basisOfRecord', 'taxonRank', 'continent', 'countryCode', 'coordinateuncertaintyinmeters'))
library(speciesgeocodeR)
occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 20, hasCoordinate = TRUE,
fields = c('name','decimalLongitude', 'decimalLatitude', 'basisOfRecord', 'taxonRank', 'continent', 'countryCode', 'coordinateUncertaintyInMeters'))
RichnessGrid(dat['decimallongitude', 'decimallatitude'], ras = NULL, reso = 1)
dat <- occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 20, hasCoordinate = TRUE,
fields = c('name','decimalLongitude', 'decimalLatitude', 'basisOfRecord', 'taxonRank', 'continent', 'countryCode', 'coordinateUncertaintyInMeters'))
nrow(dat)
dat
RichnessGrid(dat['decimallongitude', 'decimallatitude'], ras = NULL, reso = 1)
RichnessGrid(dat['decimalLongitude', 'decimalLatitude'], ras = NULL, reso = 1)
dat <- data.frame(dat)
head(dat9)
head(dat)
RichnessGrid(dat['decimalLongitude', 'decimalLatitude'], ras = NULL, reso = 1)
tolower(names(dat))
library(speciesgeocodeR)
dat <- occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 20, hasCoordinate = TRUE,
fields = c('name','decimalLongitude', 'decimalLatitude', 'basisOfRecord', 'taxonRank', 'continent', 'countryCode', 'coordinateUncertaintyInMeters'))
dat <- data.frame(dat)
nrow(dat)
head(dat)
RichnessGrid(dat, ras = NULL, reso = 1)
dat
dat <- occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 20, hasCoordinate = TRUE,
fields = c('species','decimalLongitude', 'decimalLatitude', 'basisOfRecord', 'taxonRank', 'continent', 'countryCode', 'coordinateUncertaintyInMeters'))
dat
dat <- occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 20, hasCoordinate = TRUE,
fields = c('species','decimalLongitude', 'decimalLatitude', 'basisOfRecord', 'taxonRank', 'continent', 'countryCode', 'coordinateUncertaintyInMeters'))
dat <- data.frame(dat)
nrow(dat)
head(dat)
RichnessGrid(dat, ras = NULL, reso = 1)
plot(RichnessGrid(dat, ras = NULL, reso = 1))
dat <- occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 500, hasCoordinate = TRUE,
fields = c('species','decimalLongitude', 'decimalLatitude', 'basisOfRecord', 'taxonRank', 'continent', 'countryCode', 'coordinateUncertaintyInMeters'))
dat <- data.frame(dat)
nrow(dat)
head(dat)
plot(RichnessGrid(dat, ras = NULL, reso = 1))
dat <- occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 1000, hasCoordinate = TRUE,
fields = c('species','decimalLongitude', 'decimalLatitude', 'basisOfRecord', 'taxonRank', 'continent', 'countryCode', 'coordinateUncertaintyInMeters'))
dat <- data.frame(dat)
nrow(dat)
head(dat)
plot(RichnessGrid(dat, ras = NULL, reso = 1))
dat <- occ_search(scientificName = "Artiodactyla", continent = "africa", return = 'data', limit = 10000, hasCoordinate = TRUE,
fields = c('species','decimalLongitude', 'decimalLatitude', 'basisOfRecord', 'taxonRank', 'continent', 'countryCode', 'coordinateUncertaintyInMeters'))
dat <- data.frame(dat)
nrow(dat)
head(dat)
plot(RichnessGrid(dat, ras = NULL, reso = 1))
dat <- read.csv("C:/Users/alexander.zizka/Dropbox (Antonelli Lab)/Arbeit/Gothenburg/Conferences/2016_11_Antonelli_lab_meeting/spatial_data_workshop/0026470-160910150852091.csv", sep = "\t")
plot(RichnessGrid(dat, ras = NULL, reso = 1))
table(dat$basisofrecord)
out <- subset(dat, dat$basisofrecord != "FOSSIL_SPECIMEN")
out <- subset(out, out$basisofrecord != "UNKOWN")
#Country information available
plot(RichnessGrid(out, ras = NULL, reso = 1))
out <- subset(out, out$countrycode != "")
plot(RichnessGrid(out, ras = NULL, reso = 1))
dat <- read.csv("C:/Users/alexander.zizka/Dropbox (Antonelli Lab)/Arbeit/Gothenburg/Conferences/2016_11_Antonelli_lab_meeting/spatial_data_workshop/0026470-160910150852091.csv", sep = "\t")
table(dat$basisofrecord)
out <- subset(dat, dat$basisofrecord != "FOSSIL_SPECIMEN")
out <- subset(out, out$basisofrecord != "UNKOWN")
#check coordinate uncertainty, the precision of the climate data used later on is approximately 10x10 km
hist(out$coordinateuncertaintyinmeters/1000, breaks = 100)
median(out$coordinateuncertaintyinmeters, na.rm = T)
nrow(out[out$coordinateuncertaintyinmeters > 10000,])/nrow(out)
names(dat)
table(out$coordinateprecision)
head(out)
#Basis of record
table(dat$basisofrecord)
out <- subset(dat, dat$basisofrecord != "FOSSIL_SPECIMEN")
out <- subset(out, out$basisofrecord != "UNKNOWN")
#check coordinate uncertainty, the precision of the climate data used later on is approximately 10x10 km
hist(out$coordinateuncertaintyinmeters/1000, breaks = 100)
median(out$coordinateuncertaintyinmeters, na.rm = T)
nrow(out[out$coordinateuncertaintyinmeters > 10000,])/nrow(out)
median(out$coordinateuncertaintyinmeters/ 1000, na.rm = T)
hist(out$coordinateuncertaintyinmeters/1000, breaks = 100)
out
median(out$coordinateuncertaintyinmeters/ 1000, na.rm = T)
nrow(out[out$coordinateuncertaintyinmeters > 10000,])/nrow(out)
out$coordinateuncertaintyinmeters
dim(out)
table(dat$basisofrecord)
table(out$basisofrecord)
dim(out)
dim(dat)
hist(out$coordinateuncertaintyinmeters/1000, breaks = 100)
median(out$coordinateuncertaintyinmeters/ 1000, na.rm = T)
mean(out$coordinateuncertaintyinmeters/ 1000, na.rm = T)
nrow(out[out$coordinateuncertaintyinmeters > 10000,])/nrow(out)
nrow(out[out$coordinateuncertaintyinmeters > 10000,])
out$coordinateuncertaintyinmeters
hist(out$coordinateuncertaintyinmeters/1000, breaks = 100)
nrow(out[out$coordinateuncertaintyinmeters > 10000,])/nrow(out)
nrow(out[out$coordinateuncertaintyinmeters == 250,])
nrow(out)
table(out$coordinateuncertaintyinmeters)
nrow(out[out$coordinateuncertaintyinmeters > 10000,])
hist(out$coordinateuncertaintyinmeters/1000, breaks = 100)
hist(out$coordinateuncertaintyinmeters, breaks = 100)
nrow(out[out$coordinateuncertaintyinmeters > 10000,])
nrow(out[out$coordinateuncertaintyinmeters < 10000,])
nrow(out)
str(out)
out$coordinateuncertaintyinmeters > 10000
out[out$coordinateuncertaintyinmeters > 10000,])
out$coordinateuncertaintyinmeters > 10000, 'coordinateuncertaintyinmeters']
out[out$coordinateuncertaintyinmeters > 10000, 'coordinateuncertaintyinmeters']
sum(out$coordinateuncertaintyinmeters > 10000)
sum(na.omit(out$coordinateuncertaintyinmeters > 10000))
out2 <- out[out$coordinateuncertaintyinmeters < 10000,]
nrow(out2)
nrow(out)
out <- out[!out$species == "", ]
out <- out[!is.na(out$species),]
nrow(out)
out <- out[out$taxonrank %in% c("SPECIES", "SUBSPECIES"),]
nrow(out)
test <- strsplit(as.character(out$species), split = " ")
out <- out[!lapply(test, function(x) x[2]) == "sp", ]
nrow(out)
length(unique(out$species))
out$species <- paste(lapply(test, function(x) x[1]), lapply(test, function(x) x[2]), sep = " ")
length(unique(out$species))
unique(out$species)
test <- CleanCoordinates(x = out[,c("decimallongitude", "decimallatitude")],
species = out[,"species"],
countries = out[,"countrycode"]) #countrycheck test is not working
out
rec <- RichnessGrid(out, reso = 1)
rec <- RichnessGrid(out, ras = NULL,  reso = 1)
plot(rec)
nrow(dat)
nrow(out)
length(unique(dat$species))
length(unique(out$species))
diff <- RichnessGrid(dat, reso = 1) - RichnessGrid(out, reso = 1)
diff <- RichnessGrid(dat, reso = 1, ras = NULL) - RichnessGrid(out, reso = 1, ras = NULL)
ras <- raster(SpatialPoints(dat))
ras <- raster(SpatialPoints(dat[, c('decimallongitue', 'decimallatitude')]))
names(dat)
ras <- raster(SpatialPoints(dat[, c('decimallongitude', 'decimallatitude')]))
res(ras) <- 1
diff <- RichnessGrid(dat, ras) - RichnessGrid(out, ras)
plot(diff)
out
head(out)
x <- out[,c("decimallongitude", "decimallatitude")]
x
head(x)
countries <- dat[,"countrycode"]
head(countries)
testpolys <- speciesgeocodeR::countryborders
pts <- SpatialPoints(x)
plot(pts)
testpolys <- crop(testpolys, extent(pts))
plot(testpolys)
points(pts)
country <- sp::over(x = pts, y = testpolys)[, "ISO3"]
country
head(countryborders)
country <- sp::over(x = pts, y = testpolys)[, "ISO2"]
country
out <- as.character(country) == as.character(countries)
as.character(country)
as.character(countries)
countries <- out[,"countrycode"]
library(speciesgeocodeR)
dat <- read.csv("C:/Users/alexander.zizka/Dropbox (Antonelli Lab)/Arbeit/Gothenburg/Conferences/2016_11_Antonelli_lab_meeting/spatial_data_workshop/0026470-160910150852091.csv", sep = "\t")
plot(RichnessGrid(dat, ras = NULL, reso = 1))
test <- CleanCoordinates(x = out[,c("decimallongitude", "decimallatitude")],
species = out[,"species"],
countries = out[,"countrycode"]) #co
out<-dat
test <- CleanCoordinates(x = out[,c("decimallongitude", "decimallatitude")],
species = out[,"species"],
countries = out[,"countrycode"]) #co
plot(test)
?CLeanCoordinates
?CleanCoordinates
test <- CleanCoordinates(x = out[,c("decimallongitude", "decimallatitude")],
species = out[,"species"],
countries = out[,"countrycode"], centroids.rad = 0.05, outliers = F) #cou
plot(test)
