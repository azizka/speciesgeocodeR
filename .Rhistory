lentgh(unique(dd$id))
length(unique(dd$id))
dim(tt@data)
head(tt@data)
tail(tt@data)
tail(unique(dd$id))
head(unique(dd$id))
head(pol)
pol <- ggplot2::fortify(model = x$polygons)
pol <- merge(pol.f, x$polygons@data, by.x="id", by.y = "row.names")
head(pol)
data.frame(x$polygon_table)
pol.df <- as(x$polygons, "data.frame")
pol.df
library(speciesgeocodeR)
occ.exmpl<- data.frame(species = sample(letters, size = 250, replace = TRUE),
decimallongitude = runif(n = 250, min = 42, max = 51),
decimallatitude = runif(n = 250, min = -26, max = -11))
pol.exmpl <-
SpatialPolygonsDataFrame(
SpatialPolygons(
list(Polygons(list(Polygon(cbind(c(44, 46, 46, 44, 44),
c(-24, -24, -13, -13, -24)))), ID = '1'),
Polygons(list(Polygon(cbind(c(47, 50, 50, 47, 47),
c(-24, -24, -13, -13, -24)))), ID = '2'))),
data.frame(areas = c("Polygon1", "Polygon2")))
outp <- SpGeoCod(occ.exmpl, pol.exmpl, areanames = "areas")
occ.exmpl<- data.frame(species = sample(letters, size = 250, replace = TRUE),
decimallongitude = runif(n = 250, min = 42, max = 51),
decimallatitude = runif(n = 250, min = -26, max = -11))
pol.exmpl <-
SpatialPolygonsDataFrame(
SpatialPolygons(
list(Polygons(list(Polygon(cbind(c(44, 46, 46, 44, 44),
c(-24, -24, -13, -13, -24)))), ID = '1'),
Polygons(list(Polygon(cbind(c(47, 50, 50, 47, 47),
c(-24, -24, -13, -13, -24)))), ID = '2'))),
data.frame(areas = c("Polygon1", "Polygon2")))
library(speciesgeocodeR)
occ.exmpl<- data.frame(species = sample(letters, size = 250, replace = TRUE),
decimallongitude = runif(n = 250, min = 42, max = 51),
decimallatitude = runif(n = 250, min = -26, max = -11))
pol.exmpl <-
SpatialPolygonsDataFrame(
SpatialPolygons(
list(Polygons(list(Polygon(cbind(c(44, 46, 46, 44, 44),
c(-24, -24, -13, -13, -24)))), ID = '1'),
Polygons(list(Polygon(cbind(c(47, 50, 50, 47, 47),
c(-24, -24, -13, -13, -24)))), ID = '2'))),
data.frame(areas = c("Polygon1", "Polygon2")))
outp <- SpGeoCod(occ.exmpl, pol.exmpl, areanames = "areas")
x <- outp
pol <- ggplot2::fortify(model = x$polygons)
pol <- merge(pol.f, x$polygons@data, by.x="id", by.y = "row.names")
pol
x$polygons@data
library(speciesgeocodeR)
occ.exmpl<- data.frame(species = sample(letters, size = 250, replace = TRUE),
decimallongitude = runif(n = 250, min = 42, max = 51),
decimallatitude = runif(n = 250, min = -26, max = -11))
pol.exmpl <-
SpatialPolygonsDataFrame(
SpatialPolygons(
list(Polygons(list(Polygon(cbind(c(44, 46, 46, 44, 44),
c(-24, -24, -13, -13, -24)))), ID = '1'),
Polygons(list(Polygon(cbind(c(47, 50, 50, 47, 47),
c(-24, -24, -13, -13, -24)))), ID = '2'))),
data.frame(areas = c("Polygon1", "Polygon2")))
outp <- SpGeoCod(occ.exmpl, pol.exmpl, areanames = "areas")
x <- outp
pol <- ggplot2::fortify(model = x$polygons)
pol <- merge(pol.f, x$polygons@data, by.x="id", by.y = "row.names")
pol
x
library(speciesgeocodeR)
occ.exmpl<- data.frame(species = sample(letters, size = 250, replace = TRUE),
decimallongitude = runif(n = 250, min = 42, max = 51),
decimallatitude = runif(n = 250, min = -26, max = -11))
pol.exmpl <-
SpatialPolygonsDataFrame(
SpatialPolygons(
list(Polygons(list(Polygon(cbind(c(44, 46, 46, 44, 44),
c(-24, -24, -13, -13, -24)))), ID = '1'),
Polygons(list(Polygon(cbind(c(47, 50, 50, 47, 47),
c(-24, -24, -13, -13, -24)))), ID = '2'))),
data.frame(areas = c("Polygon1", "Polygon2")))
outp <- SpGeoCod(occ.exmpl, pol.exmpl, areanames = "areas")
x <- outp
pol <- ggplot2::fortify(model = x$polygons)
pol <- merge(pol.f, x$polygons@data, by.x="id", by.y = "row.names")
pol
x
library(speciesgeocodeR)
occ.exmpl<- data.frame(species = sample(letters, size = 250, replace = TRUE),
decimallongitude = runif(n = 250, min = 42, max = 51),
decimallatitude = runif(n = 250, min = -26, max = -11))
pol.exmpl <-
SpatialPolygonsDataFrame(
SpatialPolygons(
list(Polygons(list(Polygon(cbind(c(44, 46, 46, 44, 44),
c(-24, -24, -13, -13, -24)))), ID = '1'),
Polygons(list(Polygon(cbind(c(47, 50, 50, 47, 47),
c(-24, -24, -13, -13, -24)))), ID = '2'))),
data.frame(areas = c("Polygon1", "Polygon2")))
outp <- SpGeoCod(occ.exmpl, pol.exmpl, areanames = "areas")
pol <- ggplot2::fortify(model = x$polygons)
pol <- merge(pol.f, x$polygons@data, by.x="id", by.y = "row.names")
pol
e <- raster::extent(x$polygons) + 1
bgmap <- speciesgeocodeR::landmass
bgmap <- raster::crop(bgmap, e)
bgmap <- ggplot2::fortify(bgmap)
pol <- ggplot2::fortify(model = x$polygons)
pol <- merge(pol.f, x$polygons@data, by.x="id", by.y = "row.names")
head(pol)
ggplot2::ggplot()+
ggplot2::geom_polygon(bgmap, aes_string(x = "long", y = "lat", group = "group"), col = "grey60")+
ggplot2::geom_polygon(pol, aes_string(x = "long", y = "lat", group = "group", col = "sppol"))+
ggplot2::coord_fixed()+
ggplot2::theme_bw()
e <- raster::extent(x$polygons) + 1
bgmap <- speciesgeocodeR::landmass
bgmap <- raster::crop(bgmap, e)
bgmap <- ggplot2::fortify(bgmap)
head(bgmap)
pol <- ggplot2::fortify(model = x$polygons)
pol <- merge(pol.f, x$polygons@data, by.x="id", by.y = "row.names")
head(pol)
ggplot2::ggplot()+
ggplot2::geom_polygon(bgmap, aes_string(x = "long", y = "lat", group = "group"), col = "grey60")
bgmap
ggplot2::ggplot()+
ggplot2::geom_path(bgmap, aes_string(x = "long", y = "lat", group = "group"), col = "grey60")
ggplot2::ggplot()+
ggplot2::geom_polygon(data = bgmap,
aes_string(x = "long", y = "lat", group = "group"),
col = "grey60")
ggplot2::ggplot()+
ggplot2::geom_polygon(data = bgmap,
aes_string(x = "long", y = "lat", group = "group"),
col = "grey60")+
ggplot2::geom_polygon(data = pol,
aes_string(x = "long", y = "lat", group = "group", col = "sppol"))
ggplot2::ggplot()+
ggplot2::geom_polygon(data = bgmap,
aes_string(x = "long", y = "lat", group = "group"),
col = "grey60")+
ggplot2::geom_polygon(data = pol,
aes_string(x = "long", y = "lat", group = "group", fill = "sppol"))
?scale_fill_viridis
library(viridis)
?scale_fill_viridis
head(x)
plo.out <- ggplot2::ggplot()+
ggplot2::geom_polygon(data = bgmap,
aes_string(x = "long", y = "lat", group = "group"),
col = "grey60")+
ggplot2::geom_polygon(data = pol,
aes_string(x = "long", y = "lat", group = "group", fill = "sppol"))+
ggplot2::coord_fixed()+
ggplot2::theme_bw()
plo.out +
scale_fill_viridis(options = 'inferno', discrete = T)
plo.out +
scale_fill_viridis(option = 'inferno', discrete = T)
str(pol)
as.integer(pol$sppol)
pol$sppol <- as.integer(pol$sppol)
str(pol)
plo.out +
scale_fill_viridis(option = 'inferno', discrete = T)
plo.out <- ggplot2::ggplot()+
ggplot2::geom_polygon(data = bgmap,
aes_string(x = "long", y = "lat", group = "group"),
col = "grey60")+
ggplot2::geom_polygon(data = pol,
aes_string(x = "long", y = "lat", group = "group", fill = "sppol"))+
ggplot2::coord_fixed()+
ggplot2::theme_bw()
plo.out +
scale_fill_viridis(option = 'inferno', discrete = T)
plo.out +
scale_fill_viridis(options = 'inferno', discrete = F)
plo.out +
scale_fill_viridis(option = 'inferno', discrete = F)
plo.out +
scale_fill_viridis(option = 'viridis')
plo+
geom_poins(data = x$samples, aes_string(x = 'decimallongitude', y = 'decimallatitude'),
col = "red")
plo.out+
geom_poins(data = x$samples, aes_string(x = 'decimallongitude', y = 'decimallatitude'),
col = "red")
plo.out+
geom_poin(data = x$samples, aes_string(x = 'decimallongitude', y = 'decimallatitude'),
col = "red")
plo.out+
geom_points(data = x$samples, aes_string(x = 'decimallongitude', y = 'decimallatitude'),
col = "red")
plo.out+
geom_point(data = x$samples, aes_string(x = 'decimallongitude', y = 'decimallatitude'),
col = "red")
tidy_source()
library(speciesgeocodeR)
MapRichness(outp)
library(speciesgeocodeR)
MapRichness(outp)
MapRichness(outp, show.occ = T)
MapRichness(outp, show.occ = T, buffer = 10)
library(speciesgeocodeR)
MapRichness(outp)
str(x)
tidy_source
tidy_source()
?missing
dat <- read.csv("C:/Users/alexander.zizka/Dropbox (Antonelli Lab)/Arbeit/Gothenburg/Conferences/2016_11_Antonelli_lab_meeting/0026470-160910150852091.csv", sep = "\t")
CleanCoordinates(outp$samples[,1:2])
outp$samples[,1:2]
library(speciesgeocodeR)
dat <- CleanCoordinates(outp$samples[,2:3])
plot(dat)
summary(dat)
x <- dat
out <- apply(x[,-c(1,2)], 2, "!")
apply(out[,-c(1,2)], 2, "sum")
print(apply(out[,-c(1,2)], 2, "sum"))
print("Flagged Records")
print(apply(out[,-c(1,2)], 2, "sum"))
summary.spatialvalid <- function(x){
out <- apply(x[,-c(1,2)], 2, "!")
print("Flagged Records")
print(apply(out[,-c(1,2)], 2, "sum"))
}
summary(dat)
print(Flagged Records)
library(speciesgeocodeR)
library(mapdata)
install.packages("mapdata")
library(mapdata)
rivers
dat <- rivers
dat
is(dat)
plot(rivers)
data(rivers)
rivers
map(rivers)
map("rivers")
map(world2Hires)
libPaths()
.libPaths()
tt <- CalcRange(outp)
librar(speciesgeocodeR)
library(speciesgeocodeR)
tt <- CalcRange(outp)
occ.exmpl<- data.frame(species = sample(letters, size = 250, replace = TRUE),
decimallongitude = runif(n = 250, min = 42, max = 51),
decimallatitude = runif(n = 250, min = -26, max = -11))
pol.exmpl <-
SpatialPolygonsDataFrame(
SpatialPolygons(
list(Polygons(list(Polygon(cbind(c(44, 46, 46, 44, 44),
c(-24, -24, -13, -13, -24)))), ID = '1'),
Polygons(list(Polygon(cbind(c(47, 50, 50, 47, 47),
c(-24, -24, -13, -13, -24)))), ID = '2'))),
data.frame(areas = c("Polygon1", "Polygon2")))
outp <- SpGeoCod(occ.exmpl, pol.exmpl, areanames = "areas")
tt <- CalcRange(outp)
warnings()
tt
?CalcRangw
CalcRange
?CalcRange
tt <- CalcRange(outp, index = "EOO")
tt
tt <- CalcRange(outp, index = "EOO"eoo.value = "shape")
tt <- CalcRange(outp, index = "EOO", eoo.value = "shape")
tt
bb <- RangeRichness(tt)
plot(bb)
plotHull(tt)
PlotHull(tt)
PlotHull(bb)
is(bb)
PlotHull(dat = tt)
is(tt)
tt
class(tt)
is(tt)
is(tt[[1]])
library(speciesgeocodeR)
tt <- CalcRange(outp, index = "EOO", eoo.value = "shape")
tt
is(tt)
PlotHull(dat = tt)
?PlotHull
is(tt[[1]])
m <- do.call(tt, buff.pts)
m <- do.call(bind, tt)
m
plot(m)
?bind
do.call(raster::bind, tt)
names(m)
names(tt)
library(speciesgeocodeR)
tt <- CalcRange(outp, index = "EOO", eoo.value = "shape")
tt
head(tt)
library(speciesgeocodeR)
tt <- CalcRange(outp, index = "EOO", eoo.value = "shape")
tt
head(tt)
library(speciesgeocodeR)
PlotHull(dat = tt)
tt <- CalcRange(outp, index = "EOO", eoo.value = "shape")
PlotHull(dat = tt)
tt
head(tt)
library(formatR)
tidy_source()
tidy_source()
tidy_source(width.cutoff = 80)
library(speciesgeocodeR)
PlotHull(dat = tt)
library(speciesgeocodeR)
PlotHull(dat = tt)
library(speciesgeocodeR)
PlotHull(dat = tt)
library(speciesgeocodeR)
PlotHull(dat = tt)
library(speciesgeocodeR)
PlotHull(dat = tt)
library(speciesgeocodeR)
PlotHull(dat = tt)
library(speciesgeocodeR)
PlotHull(dat = tt)
PlotHull(dat = tt, select = "a")
PlotHull(dat = tt, select = "b")
dat <- tt
dat.plo <- fortify(subset(dat, species %in% select))
library(ggplot2)
dat.plo <- ggplot2::fortify(subset(dat, species %in% select))
select <- "a"
dat.plo <- ggplot2::fortify(subset(dat, species %in% select))
dat.plo
dat
dat[dat$species == "a"]
dat["a"]
dat["a",]
dat[dat$species %in% "a"]
plot(dat[dat$species %in% "a"])
plot(dat[dat$species == "a"])
head(dat)
plot(dat[as.character(dat$species) == "a"])
dat$species
plot(dat[as.character(dat@data$species) == "a"])
subset(dat, species %in% select)
plot(subset(dat, species %in% select))
if (missing(bgmap)) {
bgmap <- speciesgeocodeR::landmass
bgmap <- raster::crop(bgmap, e)
}
bgmap <- ggplot2::fortify(bgmap)
plo <- ggplot2::ggplot()+
ggplot2::geom_polygon(data = bgmap,
aes_string(x = "long", y = "lat", group = "group"),
fill = "white")+
ggplot2::coord_fixed()+
ggplot2::theme_bw()
e <- raster::extent(dat) + buffer
plo+
ggplot2::geom_polygon(data = dat.plo,
aes_string(x = "long", y = "lat", group = "group"),
fill = col)
bgmap <- ggplot2::fortify(bgmap)
plo <- ggplot2::ggplot()+
ggplot2::geom_polygon(data = bgmap,
aes_string(x = "long", y = "lat", group = "group"),
fill = "white")+
ggplot2::coord_fixed()+
ggplot2::theme_bw()
bgmap <- speciesgeocodeR::landmass
bgmap <- raster::crop(bgmap, e)
e <- raster::extent(dat) + buffer
buffer
dat.plo <- ggplot2::fortify(subset(dat, species %in% select))
plo+
ggplot2::geom_polygon(data = dat.plo,
aes_string(x = "long", y = "lat", group = "group"),
fill = col)
library(speciesgeocodeR)
PlotHull(dat = tt, select = "b")
PlotHull(dat = tt, select = "b", col = "darkred")
bb <- RangeRichness(tt)
?rasterize
RangeRichness <- function(x, ras, reso = 1, buffer = 1, terrestrial = FALSE){
if(missing(ras)){
ras <- raster(extent(x)+buffer)
res(ras) <- reso
}
out <- rasterize(x, ras, fun = 'first')
if(terrestrial){
test <- rasterize(speciesgeocodeR::landmass, out)
out <- mask(out, test)
}
return(out)
}
bb <- RangeRichness(tt)
plot(bb)
?over
?gridded
ras <- raster(extent(x)+buffer)
x <- tt
buffer < -1
buffer <-1
ras <- raster(extent(x)+buffer)
res(ras) <- reso
reso = 1
res(ras) <- reso
gridded(ras) <- FALSE
coords(ras)
coordinates(ras)
over
?over
as.list(tt)
Polygons(tt)
tt@Polygons
tt@SpatialPolygons
slots(tt)
tt
SpatialPolygons(tt)
slot("SpatialPolygons", tt)
slots(tt)
?SpatialPolygons
tt
ttslotNames(tt)
slotNames(tt)
tt@polygons
bb <- tt@polygons
bb
str(bb)
is(bb)
plot(bb[[1]])
bb[[1]]
bb[[1]][[1]]
bb[[1]]
lapply(bb@polygons , slot , "Polygons")
slot("polygons", bb)
slot(bb, "polygons")
slot(tt, "polygons")
lapply(slot(tt, "polygons"), slot, "Polygons")
bb <- lapply(slot(tt, "polygons"), slot, "Polygons")
str(bb)
length(bb)
lapply(bb, rasterize)
lapply(bb, rasterize, ras)
length(bb)[[1]]
bb[[1]]
length(bb[[1]])
xx <- SpatialPolygons(bb[[1]])
xx <- SpatialPolygons(Polygons(bb[[1]]))
?SpatialPolygons
bb
length(bb@polygons)
tt
length(tt@polygons)
lapply(tt@polygons, rasterize, ras)
rasterize(bb@polygons[[1]], ras)
rasterize(ras, bb@polygons[[1]])
rasterize(ras, tt@polygons[[1]])
rasterize(tt@polygons[[1]], ras)
rasterize(SpatialPolygons(list(tt@polygons[[1]])), ras)
x <- tt
x@polygons
lapply(x@polygons, function(k){
rasterize(SpatialPolygons(list(k)), ras)
})
out <- lapply(x@polygons, function(k){
rasterize(SpatialPolygons(list(k)), ras)
})
out <- Reduce(out, '+')
out <- Reduce('+', out)
plot(uot)
plot(out)
out <- lapply(x@polygons, function(k){
rasterize(SpatialPolygons(list(k)), ras)
})
plot(out[[1]])
plot(out[[2]])
?rasterize
out <- lapply(x@polygons, function(k){
tt <- rasterize(SpatialPolygons(list(k)), ras, background = 0)
})
out <- Reduce('+', out)
plot(out)
if(terrestrial){
test <- rasterize(speciesgeocodeR::landmass, out)
out <- mask(out, test)
}
test <- rasterize(speciesgeocodeR::landmass, out)
out <- mask(out, test)
plot(out)
reso <- 0.1
ras <- raster(extent(x)+buffer)
res(ras) <- reso
out <- lapply(x@polygons, function(k){
tt <- rasterize(SpatialPolygons(list(k)), ras, background = 0)
})
out <- Reduce('+', out)
plot(out)
tidy_source()
