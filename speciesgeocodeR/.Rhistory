library(speciesgeocodeR)
occ.thresh <- 0.1 #at least 10% occurrence in an area required
fos <- read.table("Example_data/DES_input_data/Example_2_coordinates_CEN.txt", sep = "\t", header = T)
fos.class <- SpGeoCod("Example_data/DES_input_data/Example_2_coordinates.txt", "Example_data/DES_input_data/Example_regions.shp", areanames = "Region")
fos <- read.table("Example_data/DES_input_data/Example_2_coordinates_CEN.txt", sep = "\t", header = T)
fos <- read.table("example_fiels/DES_input_data/Example_2_coordinates_CEN.txt", sep = "\t", header = T)
fos <- read.table("example_files/DES_input_data/Example_2_coordinates_CEN.txt", sep = "\t", header = T)
fos.class <- SpGeoCod("example_files/DES_input_data/Example_2_coordinates_CEN.txt", "example_files/DES_input_data/Example_regions.shp", areanames = "Region")
foss <- data.frame(fos, higherGeography = fos.class$sample_table$homepolygon)
foss <- foss[complete.cases(foss),]
#Assign the recent coordinates to operational areas, using the occurrence threshold
rec <- read.table("Example_data/Example_2_recent_coordinates.txt", sep = "\t", header = T)
rec.class <- SpGeoCod("Example_data/Example_2_recent_coordinates.txt", "Example_data/Example_regions.shp",
areanames = "Region")
pres <- round(rec.class$spec_table[, 2:3] / rowSums(rec.class$spec_table[, 2:3]), 2)
rec <- read.table("example_files/DES_input_data/Example_2_recent_coordinates.txt", sep = "\t", header = T)
rec.class <- SpGeoCod("example_files/DES_input_data/Example_2_recent_coordinates.txt", "example_files/DES_input_data/Example_regions.shp",
areanames = "Region")
pres <- round(rec.class$spec_table[, 2:3] / rowSums(rec.class$spec_table[, 2:3]), 2)
pres[which(pres[, 1] >= occ.thresh ), 1] <- names(pres)[1]
pres[which(pres[, 2] >= occ.thresh ), 2] <- names(pres)[2]
pres <- data.frame(scientificName = rep(rec.class$spec_table[, 1], 2),
higherGeography = c(pres[, 1], pres[, 2]))
pres <- pres[pres$higherGeography %in% names(rec.class$spec_table), ]
#create DESin files
exp2 <- DESin(foss, pres, bin.size = 2, reps = 3)
write.DES.in(exp2, "Example2_out")
summary(exp2)
par(ask = T)
plot(exp2)
dat <- read.table("C:/Users/xzizal/Dropbox (Antonelli Lab)/Arbeit/Gothenburg/Projects/21_rare_species_amazon/input/FINAL_gbif_angiosperms_clean_geo_taxonom.txt", header = T, sep = "\t")
head(dat)
max(dat$longitude)
min(dat$longitude)
library(speciesgeocodeR)
?RIchnessGRid
?RIchnessGrid
?RichnessGrid
i < -1
i <- 1
print(paste(i,"/",tt, sep = ""))
tt <- length(inp)
print(paste(i,"/",tt, sep = ""))
inp <- list.files("input/gbif_split")
tt <- length(inp)
print(paste(i,"/",tt, sep = ""))
inp
inp <- list.files("input/gbif_split")
setwd("C:/Users/xzizal/Dropbox (Antonelli Lab)/Arbeit/Gothenburg/Projects/Z_RB_gbif_diversity_map")
library(raster)
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("Identifier", "XCOOR", "YCOOR")
head(dat)
bb <- RichnessGrid(dat, limits = c(-180,180,-90,90), reso = 60), type = "spnum")
bb <- RichnessGrid(dat, limits = c(-180,180,-90,90), reso = 60, type = "spnum")
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- RichnessGrid(dat, limits = c(-180,180,-90,90), reso = 60, type = "spnum")
plot(bb)
dim(dat)
for(i in 1:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- RichnessGrid(dat, limits = c(-180,180,-90,90), reso = 60, type = "spnum")
writeRaster(bb, paste("input/species_raster/raster_", i, sep = ""))
}
inp <- list.files("input/gbif_split")
length(inp)
tt <- length(inp)
for(i in 1:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- RichnessGrid(dat, limits = c(-180,180,-90,90), reso = 60, type = "spnum")
writeRaster(bb, paste("input/species_raster/raster_", i, sep = ""))
}
for(i in 138:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- RichnessGrid(dat, limits = c(-180,180,-90,90), reso = 60, type = "spnum")
writeRaster(bb, paste("input/species_raster/raster_", i, sep = ""))
}
for(i in 271:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- RichnessGrid(dat, limits = c(-180,180,-90,90), reso = 60, type = "spnum")
writeRaster(bb, paste("input/species_raster/raster_", i, sep = ""))
}
for(i in 283:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- RichnessGrid(dat, limits = c(-180,180,-90,90), reso = 60, type = "spnum")
writeRaster(bb, paste("input/species_raster/raster_", i, sep = ""))
}
for(i in 330:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- RichnessGrid(dat, limits = c(-180,180,-90,90), reso = 60, type = "spnum")
writeRaster(bb, paste("input/species_raster/raster_", i, sep = ""))
}
#add up all raster
library(maptools)
cont <- readShapeSpatial("ne_10m_admin_1_states_provinces.shp")
cont <- readShapeSpatial("input/ne_10m_admin_1_states_provinces.shp")
head(cont)
cont <- readShapeSpatial("input/ne_110m_admin_0_countries.shp")
head(Cont)
head(cont)
plot(cont)
?SpGeoCod
i <- 1
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- SpGeoCod(dat, cont, areanames = "iso_a3")
bb$polygon_table
data.frame(bb$polygon_table)
data.frame(t(bb$polygon_table))
cont.out <- data.frame(cont$iso_a3)
cont.out
cont.out <- data.frame(cont$iso_a3, row.names = cont$iso_a3)
cont.out <- data.frame(cont$iso_a3, rownames = cont$iso_a3)
head(cont.out)
cont.out <- data.frame(unique(cont$iso_a3), row.names = unique(cont$iso_a3))
cont.out
bb <- data.frame(t(bb$polygon_table))
cont.out <- merge(cont.out, bb, by = "row.names", all = T)
cont.out
cont.out <- data.frame(unique(cont$iso_a3), row.names = unique(cont$iso_a3))
cont.out <- merge(cont.out, bb, by = "row.names", all = T)
cont.out
?merge
rownames(cont.out) <- unique(cont$iso_a3)
cont.out
rownames(cont.out) <- sort(unique(cont$iso_a3))
cont.out
cont.out <- data.frame(unique(cont$iso_a3), row.names = unique(cont$iso_a3))
for(i in 1:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- SpGeoCod(dat, cont, areanames = "iso_a3")
bb <- data.frame(t(bb$polygon_table))
cont.out <- merge(cont.out, bb, by = "row.names", all = T)
rownames(cont.out) <- sort(unique(cont$iso_a3))
}
for(i in 1:2){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- SpGeoCod(dat, cont, areanames = "iso_a3")
bb <- data.frame(t(bb$polygon_table))
cont.out <- merge(cont.out, bb, by = "row.names", all = T)
rownames(cont.out) <- sort(unique(cont$iso_a3))
}
cont.out
cont.out <- data.frame(unique(cont$iso_a3), row.names = unique(cont$iso_a3))
cont.out
cont.out <- data.frame(nam = unique(cont$iso_a3), row.names = unique(cont$iso_a3))
cont.out <- data.frame(nam = unique(cont$iso_a3))
cont.out
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- SpGeoCod(dat, cont, areanames = "iso_a3")
bb <- data.frame(t(bb$polygon_table))
head(bb)
cont.out <- merge(cont.out, bb, by.x = "nam", by.y = "row.names", all = T)
cont.out
cont.out <- data.frame(nam = unique(cont$iso_a3))
for(i in 1:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- SpGeoCod(dat, cont, areanames = "iso_a3")
bb <- data.frame(t(bb$polygon_table))
cont.out <- merge(cont.out, bb, by.x = "nam", by.y = "row.names", all = T)
}
warnings()
head(cont.out)
for(i in 138:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- SpGeoCod(dat, cont, areanames = "iso_a3")
bb <- data.frame(t(bb$polygon_table))
cont.out <- merge(cont.out, bb, by.x = "nam", by.y = "row.names", all = T)
}
for(i in 271:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- SpGeoCod(dat, cont, areanames = "iso_a3")
bb <- data.frame(t(bb$polygon_table))
cont.out <- merge(cont.out, bb, by.x = "nam", by.y = "row.names", all = T)
}
for(i in 283:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- SpGeoCod(dat, cont, areanames = "iso_a3")
bb <- data.frame(t(bb$polygon_table))
cont.out <- merge(cont.out, bb, by.x = "nam", by.y = "row.names", all = T)
}
for(i in 330:tt){
print(paste(i,"/",tt, sep = ""))
dat <- read.table(paste("input/gbif_split/GBIF_", i, ".txt", sep = ""), sep = " ", header = F)
dat <- dat[,2:4]
names(dat) <- c("identifier", "XCOOR", "YCOOR")
bb <- SpGeoCod(dat, cont, areanames = "iso_a3")
bb <- data.frame(t(bb$polygon_table))
cont.out <- merge(cont.out, bb, by.x = "nam", by.y = "row.names", all = T)
}
write.table(cont.out, "output/country_numbers.txt", sep = "\t")
head(cont.out)
dim(cont.out)
names(cont.out)
out <- data.frame(country = cont.out$nam, species = rowsums(cont.out[,-1]))
out <- data.frame(country = cont.out$nam, species = rowSums(cont.out[,-1]))
haed(out)
head(out)
out <- data.frame(country = cont.out$nam, species = rowSums(cont.out[,-1], na.rm = T))
head(out)
bb$polygon_table
bb
wriite.table(out, "output/species_per_Country.txt", sep = "\t")
write.table(out, "output/species_per_Country.txt", sep = "\t")
rast <- list.files("input/species_raster")
rast
inp <- stack(paste("input/species_raster/", rast))
inp <- stack(paste("input/species_raster/", rast, sep = ""))
spnums <- sum(rast)
rast
rast <- list.files("input/species_raster", pattern = ".grd")
rast
inp <- stack(paste("input/species_raster/", rast, sep = ""))
inp
spnums <- sum(rast)
spnums <- sum(inp)
plot(spnums)
spnums
str(inp)
plot(inp[[1]])
spnums <- Reduce(inp, "+")
spnums <- Reduce("+", inp)
r <- calc(inp, fun=sum)
plot(r)
r
inp <- lapply(paste("input/species_raster/", rast, sep = ""), raster)
spnums <- Reduce("+", inp)
spnums
inp
plot(spnums)
inp[[1]]@values
inp[[1]]@data
plot(inp[[1]])
inp <- lapply(inp,  function(x){
x[is.na(x)] <- 0
})
spnu
plot(inp[[1]])
inp <- lapply(paste("input/species_raster/", rast, sep = ""), raster)
plot(inp[[1]] + inp[[2]])
dd <- inp[[1]]
dd[is.na(dd)] <- 0
plot(dd)
for(i in 1:length(inp)){
inp[[i]][is.na(inp[[i]])] <- 0
}
plot(inp[[1]])
plot(inp[[2]])
plot(inp[[3]])
spnums <- Reduce("+", inp)
plot(spnums)
writeRaster(spnums, "output/species_numbers")
occ <- raster("output/GBIF_occurrence_number")
spnum <- raster("species_numbers")
spnum <- raster("output/species_numbers")
plot(occ)
m1000 <- spnum[occ > 1000]
plot(m1000)
occ > 1000
plot(occ > 1000)
m1000 <- spnum[occ > 1000]
plot(m1000)
m1000 <- occ[occ > 1000]
plot(m1000)
m1000 <- occ > 1000
plot(m1000)
sp1000 <- mask(spnum, m1000)
plot(Sp1000)
plot(sp1000)
plot(spnum)
sp1000 <- mask(spnum, m1000)
m1000 <- occ > 1000
m1000[m1000 == 0] <-"NA"
sp1000 <- mask(spnum, m1000)
plot(m1000)
m1000@data
m1000 <- occ > 1000
m1000@data[m1000@data == 0] <-"NA"
m1000@data == 0
m1000@data
m1000 <- occ > 1000
occ@data
occ@data@values
getValues?mask
?mask
m1000 <- occ > 1000
m1000@data[m1000@data == 0] <-"NA"
sp1000 <- mask(spnum, m1000, maskvalues = "FALSE")
m1000 <- occ > 1000
sp1000 <- mask(spnum, m1000, maskvalues = "FALSE")
plot(sp1000)
sp1000 <- mask(spnum, m1000, maskvalue = "FALSE")
plot(sp1000)
m10000 <- occ > 10000
sp10000 <- mask(spnum, m10000, maskvalue = "FALSE")
plot(sp10000)
m20000 <- occ > 20000
sp20000 <- mask(spnum, m20000, maskvalue = "FALSE")
plot(sp20000)
m2000 <- occ > 2000
sp2000 <- mask(spnum, m2000, maskvalue = "FALSE")
plot(sp2000)
getValues(spnum)
plot(getValues(spnum)~ getValues(occ))
plot(getValues(spnum)~ log(getValues(occ)))
plot(log(getValues(spnum))~ log(getValues(occ)))
plot(log10(getValues(spnum))~ log10(getValues(occ)))
abline(h = 3)
abline(v = 3, col = "red")
pdf("output/gbif_one_degree.pdf")
plot(occ)
title("NUmber of Occurrences 1 degree")
plot(spnum)
title("Number of Species 1 degree")
plot(sp1000)
titel("Number of species in cells with > 1000 collections")
plot(sp2000)
titel("Number of species in cells with > 2000 collections")
plot(sp10000)
titel("Number of species in cells with > 10000 collections")
plot(log10(getValues(spnum))~ log10(getValues(occ)), xlab = "Occurrences", ylab = "Species")
abline(v = 3, col = "red")
dev.off()
pdf("output/gbif_one_degree.pdf")
plot(occ)
title("NUmber of Occurrences 1 degree")
plot(spnum)
title("Number of Species 1 degree")
plot(sp1000)
title("Number of species in cells with > 1000 collections")
plot(sp2000)
title("Number of species in cells with > 2000 collections")
plot(sp10000)
title("Number of species in cells with > 10000 collections")
plot(log10(getValues(spnum))~ log10(getValues(occ)), xlab = "Occurrences", ylab = "Species")
abline(v = 3, col = "red")
dev.off()
cont <- read.table("plants_no_log.txt", sep = "\t")
cont <- read.table("input/plants_no_log.txt", sep = "\t")
head(cont)
cont <- read.table("input/plants_no_log.txt", sep = "\t")[, 1:3]
head(cont)
head(gbif)
gbif <- read.table("output/species_per_Country.txt", sep = "\t")
head(gbif)
spcont <- merge(gbif, cont, by.x = "country", by.y = "identifier")
head(Spcont)
head(spcont)
dim(spcont)
plot(spcont$species ~ spcont$spp)
head(gbif)
abline(1:25000, 1:25000)
plot(spcont$species ~ spcont$spp, xlab = "Checklists", ylab = "GBIF", xlim = c(0,25000))
plot(spcont$species ~ spcont$spp, xlab = "Checklists", ylab = "GBIF",
xlim = c(0,25000), ylim = c(0, 25000))
abline(1:25000, 1:25000)
pdf("output/gbif_one_degree.pdf")
plot(occ)
title("NUmber of Occurrences 1 degree")
plot(spnum)
title("Number of Species 1 degree")
plot(sp1000)
title("Number of species in cells with > 1000 collections")
plot(sp2000)
title("Number of species in cells with > 2000 collections")
plot(sp10000)
title("Number of species in cells with > 10000 collections")
plot(log10(getValues(spnum))~ log10(getValues(occ)), xlab = "Occurrences", ylab = "Species")
abline(v = 3, col = "red")
#correlation species numbers GBIF checklist country
gbif <- read.table("output/species_per_Country.txt", sep = "\t")
cont <- read.table("input/plants_no_log.txt", sep = "\t")[, 1:3]
spcont <- merge(gbif, cont, by.x = "country", by.y = "identifier")
plot(spcont$species ~ spcont$spp, xlab = "Checklists", ylab = "GBIF",
xlim = c(0,25000), ylim = c(0, 25000))
abline(1:25000, 1:25000)
title("Species per country, GBIF vs. CHecklist estimates")
dev.off()
pdf("output/gbif_one_degree.pdf")
plot(occ)
title("NUmber of Occurrences 1 degree")
plot(spnum)
title("Number of Species 1 degree")
plot(sp1000)
title("Number of species in cells with > 1000 collections")
plot(sp2000)
title("Number of species in cells with > 2000 collections")
plot(sp10000)
title("Number of species in cells with > 10000 collections")
plot(log10(getValues(spnum))~ log10(getValues(occ)), xlab = "Collections", ylab = "Species")
abline(v = 3, col = "red")
title("Species numer vs collection number")
#correlation species numbers GBIF checklist country
gbif <- read.table("output/species_per_Country.txt", sep = "\t")
cont <- read.table("input/plants_no_log.txt", sep = "\t")[, 1:3]
spcont <- merge(gbif, cont, by.x = "country", by.y = "identifier")
plot(spcont$species ~ spcont$spp, xlab = "Checklists", ylab = "GBIF",
xlim = c(0,25000), ylim = c(0, 25000))
abline(1:25000, 1:25000)
title("Species per country, GBIF vs. CHecklist estimates")
dev.off()
pdf("output/gbif_one_degree.pdf")
plot(occ)
title("NUmber of Occurrences 1 degree")
plot(spnum)
title("Number of Species 1 degree")
plot(sp1000)
title("Number of species in cells with > 1000 collections")
plot(sp2000)
title("Number of species in cells with > 2000 collections")
plot(sp10000)
title("Number of species in cells with > 10000 collections")
plot(log10(getValues(spnum))~ log10(getValues(occ)), xlab = "Collections", ylab = "Species")
abline(v = 3, col = "red")
title("Species numer vs collection number")
#correlation species numbers GBIF checklist country
gbif <- read.table("output/species_per_Country.txt", sep = "\t")
cont <- read.table("input/plants_no_log.txt", sep = "\t")[, 1:3]
spcont <- merge(gbif, cont, by.x = "country", by.y = "identifier")
plot(spcont$species ~ spcont$spp, xlab = "Checklists", ylab = "GBIF",
xlim = c(0,25000), ylim = c(0, 25000))
abline(1:25000, 1:25000)
title("Species per country, GBIF vs. Checklist estimates for 42 African and South American countries")
dev.off()
pdf("output/gbif_one_degree.pdf")
plot(occ)
title("NUmber of Occurrences 1 degree")
plot(spnum)
title("Number of Species 1 degree")
plot(sp1000)
title("Number of species in cells with > 1000 collections")
plot(sp2000)
title("Number of species in cells with > 2000 collections")
plot(sp10000)
title("Number of species in cells with > 10000 collections")
plot(log10(getValues(spnum))~ log10(getValues(occ)), xlab = "Collections", ylab = "Species")
abline(v = 3, col = "red")
title("Species numer vs collection number")
#correlation species numbers GBIF checklist country
gbif <- read.table("output/species_per_Country.txt", sep = "\t")
cont <- read.table("input/plants_no_log.txt", sep = "\t")[, 1:3]
spcont <- merge(gbif, cont, by.x = "country", by.y = "identifier")
plot(spcont$species ~ spcont$spp, xlab = "Checklists", ylab = "GBIF",
xlim = c(0,25000), ylim = c(0, 25000))
abline(1:25000, 1:25000)
title("Species per country, GBIF vs. Checklist estimates for \n42 African and South American countries")
dev.off()
pdf("output/gbif_one_degree.pdf")
plot(occ)
title("Number of Occurrences 1 degree")
plot(spnum)
title("Number of Species 1 degree")
plot(sp1000)
title("Number of species in cells with > 1000 collections")
plot(sp2000)
title("Number of species in cells with > 2000 collections")
plot(sp10000)
title("Number of species in cells with > 10000 collections")
plot(log10(getValues(spnum))~ log10(getValues(occ)), xlab = "Collections", ylab = "Species")
abline(v = 3, col = "red")
title("Species numer vs collection number")
#correlation species numbers GBIF checklist country
gbif <- read.table("output/species_per_Country.txt", sep = "\t")
cont <- read.table("input/plants_no_log.txt", sep = "\t")[, 1:3]
spcont <- merge(gbif, cont, by.x = "country", by.y = "identifier")
plot(spcont$species ~ spcont$spp, xlab = "Checklists", ylab = "GBIF",
xlim = c(0,25000), ylim = c(0, 25000))
abline(1:25000, 1:25000)
title("Species per country, GBIF vs. Checklist estimates for \n42 African and South American countries")
dev.off()
