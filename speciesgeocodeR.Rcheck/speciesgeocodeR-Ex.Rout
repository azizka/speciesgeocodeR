
R Under development (unstable) (2015-10-16 r69529) -- "Unsuffered Consequences"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "speciesgeocodeR"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "speciesgeocodeR-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('speciesgeocodeR')
Loading required package: maps
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("CalcRange")
> ### * CalcRange
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: CalcRange
> ### Title: Calculate the Extent of Occurrence
> ### Aliases: CalcRange
> ### Keywords: spatial
> 
> ### ** Examples
> 
> data(lemurs)
> CalcRange(lemurs)
Warning in CalcRange(lemurs) :
  177 points were excluded due to duplicated coordinate
Warning in CalcRange(lemurs) :
  the following species have less than 3 occurrence, values set to NA:
 Daubentonia madagascariensis
 Eulemur collaris
 Eulemur rufifrons
 Eulemur rufus
 Eulemur sanfordi
 Lepilemur septentrionalis
 Microcebus griseorufus
 Microcebus lehilahytsara
 Microcebus ravelobensis
 Propithecus candidus
 Propithecus coronatus
 Propithecus deckenii
 Propithecus tattersalli
Warning in if (value == "area") { :
  the condition has length > 1 and only the first element will be used
                                EOO
Avahi laniger                 20777
Avahi occidentalis              124
Cheirogaleus major            48435
Cheirogaleus medius             121
Eulemur albifrons              1868
Eulemur coronatus              1405
Eulemur fulvus               137066
Eulemur mongoz                 2591
Eulemur rubriventer           25978
Hapalemur aureus                  5
Hapalemur griseus            115203
Hapalemur simus                 143
Indri indri                   43713
Lemur catta                   92117
Lepilemur edwardsi              169
Lepilemur microdon             3981
Lepilemur mustelinus         227232
Microcebus murinus           310618
Microcebus rufus              33814
Phaner furcifer                1196
Propithecus coquereli          2631
Propithecus diadema           77580
Propithecus edwardsi             67
Propithecus verreauxi        267728
Varecia rubra                   332
Varecia variegata             41646
Daubentonia madagascariensis     NA
Eulemur collaris                 NA
Eulemur rufifrons                NA
Eulemur rufus                    NA
Eulemur sanfordi                 NA
Lepilemur septentrionalis        NA
Microcebus griseorufus           NA
Microcebus lehilahytsara         NA
Microcebus ravelobensis          NA
Propithecus candidus             NA
Propithecus coronatus            NA
Propithecus deckenii             NA
Propithecus tattersalli          NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("CalcRange", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("CoExClass")
> ### * CoExClass
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: CoExClass
> ### Title: Species Coexistence Matrices in Given Areas.
> ### Aliases: CoExClass
> ### Keywords: spatial
> 
> ### ** Examples
> 
> data(lemurs)
> data(mdg_poly)
> 
> inp <- ReadPoints(lemurs, mdg_poly)
> outp <- SpGeoCodH(inp)
> outpcoex <- CoExClass(outp)
> outpcoex$coexistence_classified
                     identifier Avahi laniger Avahi occidentalis
1                 Avahi laniger     100.00000           0.000000
2            Avahi occidentalis       0.00000         100.000000
3            Cheirogaleus major     100.00000           0.000000
4           Cheirogaleus medius       0.00000         100.000000
5  Daubentonia madagascariensis     100.00000           0.000000
6             Eulemur albifrons     100.00000           0.000000
7              Eulemur collaris     100.00000           0.000000
8             Eulemur coronatus       0.00000         100.000000
9                Eulemur fulvus      57.14286          42.857143
10               Eulemur mongoz       0.00000         100.000000
11          Eulemur rubriventer     100.00000           0.000000
12            Eulemur rufifrons       0.00000           0.000000
13                Eulemur rufus     100.00000           0.000000
14             Eulemur sanfordi       0.00000         100.000000
15             Hapalemur aureus     100.00000           0.000000
16            Hapalemur griseus     100.00000           0.000000
17              Hapalemur simus     100.00000           0.000000
18                  Indri indri     100.00000           0.000000
19                  Lemur catta      30.43478           0.000000
20           Lepilemur edwardsi       0.00000         100.000000
21           Lepilemur microdon     100.00000           0.000000
22         Lepilemur mustelinus      40.00000          40.000000
23    Lepilemur septentrionalis       0.00000         100.000000
24       Microcebus griseorufus       0.00000           0.000000
25     Microcebus lehilahytsara     100.00000           0.000000
26           Microcebus murinus      35.71429          57.142857
27      Microcebus ravelobensis       0.00000         100.000000
28             Microcebus rufus     100.00000           0.000000
29              Phaner furcifer       0.00000          75.000000
30         Propithecus candidus     100.00000           0.000000
31        Propithecus coquereli       0.00000         100.000000
32        Propithecus coronatus       0.00000         100.000000
33         Propithecus deckenii       0.00000          50.000000
34          Propithecus diadema     100.00000           0.000000
35         Propithecus edwardsi     100.00000           0.000000
36      Propithecus tattersalli       0.00000           0.000000
37        Propithecus verreauxi      25.00000           8.333333
38                Varecia rubra     100.00000           0.000000
39            Varecia variegata     100.00000           0.000000
   Cheirogaleus major Cheirogaleus medius Daubentonia madagascariensis
1           100.00000            0.000000                    100.00000
2             0.00000          100.000000                      0.00000
3           100.00000            0.000000                    100.00000
4             0.00000          100.000000                      0.00000
5           100.00000            0.000000                    100.00000
6           100.00000            0.000000                    100.00000
7           100.00000            0.000000                    100.00000
8             0.00000          100.000000                      0.00000
9            57.14286           42.857143                     57.14286
10            0.00000          100.000000                      0.00000
11          100.00000            0.000000                    100.00000
12            0.00000            0.000000                      0.00000
13          100.00000            0.000000                    100.00000
14            0.00000          100.000000                      0.00000
15          100.00000            0.000000                    100.00000
16          100.00000            0.000000                    100.00000
17          100.00000            0.000000                    100.00000
18          100.00000            0.000000                    100.00000
19           30.43478            0.000000                     30.43478
20            0.00000          100.000000                      0.00000
21          100.00000            0.000000                    100.00000
22           40.00000           40.000000                     40.00000
23            0.00000          100.000000                      0.00000
24            0.00000            0.000000                      0.00000
25          100.00000            0.000000                    100.00000
26           35.71429           57.142857                     35.71429
27            0.00000          100.000000                      0.00000
28          100.00000            0.000000                    100.00000
29            0.00000           75.000000                      0.00000
30          100.00000            0.000000                    100.00000
31            0.00000          100.000000                      0.00000
32            0.00000          100.000000                      0.00000
33            0.00000           50.000000                      0.00000
34          100.00000            0.000000                    100.00000
35          100.00000            0.000000                    100.00000
36            0.00000            0.000000                      0.00000
37           25.00000            8.333333                     25.00000
38          100.00000            0.000000                    100.00000
39          100.00000            0.000000                    100.00000
   Eulemur albifrons Eulemur collaris Eulemur coronatus Eulemur fulvus
1          100.00000        100.00000          0.000000      100.00000
2            0.00000          0.00000        100.000000      100.00000
3          100.00000        100.00000          0.000000      100.00000
4            0.00000          0.00000        100.000000      100.00000
5          100.00000        100.00000          0.000000      100.00000
6          100.00000        100.00000          0.000000      100.00000
7          100.00000        100.00000          0.000000      100.00000
8            0.00000          0.00000        100.000000      100.00000
9           57.14286         57.14286         42.857143      100.00000
10           0.00000          0.00000        100.000000      100.00000
11         100.00000        100.00000          0.000000      100.00000
12           0.00000          0.00000          0.000000        0.00000
13         100.00000        100.00000          0.000000      100.00000
14           0.00000          0.00000        100.000000      100.00000
15         100.00000        100.00000          0.000000      100.00000
16         100.00000        100.00000          0.000000      100.00000
17         100.00000        100.00000          0.000000      100.00000
18         100.00000        100.00000          0.000000      100.00000
19          30.43478         30.43478          0.000000       30.43478
20           0.00000          0.00000        100.000000      100.00000
21         100.00000        100.00000          0.000000      100.00000
22          40.00000         40.00000         40.000000       80.00000
23           0.00000          0.00000        100.000000      100.00000
24           0.00000          0.00000          0.000000        0.00000
25         100.00000        100.00000          0.000000      100.00000
26          35.71429         35.71429         57.142857       92.85714
27           0.00000          0.00000        100.000000      100.00000
28         100.00000        100.00000          0.000000      100.00000
29           0.00000          0.00000         75.000000       75.00000
30         100.00000        100.00000          0.000000      100.00000
31           0.00000          0.00000        100.000000      100.00000
32           0.00000          0.00000        100.000000      100.00000
33           0.00000          0.00000         50.000000       50.00000
34         100.00000        100.00000          0.000000      100.00000
35         100.00000        100.00000          0.000000      100.00000
36           0.00000          0.00000          0.000000        0.00000
37          25.00000         25.00000          8.333333       33.33333
38         100.00000        100.00000          0.000000      100.00000
39         100.00000        100.00000          0.000000      100.00000
   Eulemur mongoz Eulemur rubriventer Eulemur rufifrons Eulemur rufus
1        0.000000           100.00000          0.000000     100.00000
2      100.000000             0.00000          0.000000       0.00000
3        0.000000           100.00000          0.000000     100.00000
4      100.000000             0.00000          0.000000       0.00000
5        0.000000           100.00000          0.000000     100.00000
6        0.000000           100.00000          0.000000     100.00000
7        0.000000           100.00000          0.000000     100.00000
8      100.000000             0.00000          0.000000       0.00000
9       42.857143            57.14286          0.000000      57.14286
10     100.000000             0.00000          0.000000       0.00000
11       0.000000           100.00000          0.000000     100.00000
12       0.000000             0.00000        100.000000       0.00000
13       0.000000           100.00000          0.000000     100.00000
14     100.000000             0.00000          0.000000       0.00000
15       0.000000           100.00000          0.000000     100.00000
16       0.000000           100.00000          0.000000     100.00000
17       0.000000           100.00000          0.000000     100.00000
18       0.000000           100.00000          0.000000     100.00000
19       0.000000            30.43478         69.565217      30.43478
20     100.000000             0.00000          0.000000       0.00000
21       0.000000           100.00000          0.000000     100.00000
22      40.000000            40.00000         20.000000      40.00000
23     100.000000             0.00000          0.000000       0.00000
24       0.000000             0.00000        100.000000       0.00000
25       0.000000           100.00000          0.000000     100.00000
26      57.142857            35.71429          7.142857      35.71429
27     100.000000             0.00000          0.000000       0.00000
28       0.000000           100.00000          0.000000     100.00000
29      75.000000             0.00000         25.000000       0.00000
30       0.000000           100.00000          0.000000     100.00000
31     100.000000             0.00000          0.000000       0.00000
32     100.000000             0.00000          0.000000       0.00000
33      50.000000             0.00000         50.000000       0.00000
34       0.000000           100.00000          0.000000     100.00000
35       0.000000           100.00000          0.000000     100.00000
36       0.000000             0.00000          0.000000       0.00000
37       8.333333            25.00000         66.666667      25.00000
38       0.000000           100.00000          0.000000     100.00000
39       0.000000           100.00000          0.000000     100.00000
   Eulemur sanfordi Hapalemur aureus Hapalemur griseus Hapalemur simus
1          0.000000        100.00000         100.00000       100.00000
2        100.000000          0.00000           0.00000         0.00000
3          0.000000        100.00000         100.00000       100.00000
4        100.000000          0.00000           0.00000         0.00000
5          0.000000        100.00000         100.00000       100.00000
6          0.000000        100.00000         100.00000       100.00000
7          0.000000        100.00000         100.00000       100.00000
8        100.000000          0.00000           0.00000         0.00000
9         42.857143         57.14286          57.14286        57.14286
10       100.000000          0.00000           0.00000         0.00000
11         0.000000        100.00000         100.00000       100.00000
12         0.000000          0.00000           0.00000         0.00000
13         0.000000        100.00000         100.00000       100.00000
14       100.000000          0.00000           0.00000         0.00000
15         0.000000        100.00000         100.00000       100.00000
16         0.000000        100.00000         100.00000       100.00000
17         0.000000        100.00000         100.00000       100.00000
18         0.000000        100.00000         100.00000       100.00000
19         0.000000         30.43478          30.43478        30.43478
20       100.000000          0.00000           0.00000         0.00000
21         0.000000        100.00000         100.00000       100.00000
22        40.000000         40.00000          40.00000        40.00000
23       100.000000          0.00000           0.00000         0.00000
24         0.000000          0.00000           0.00000         0.00000
25         0.000000        100.00000         100.00000       100.00000
26        57.142857         35.71429          35.71429        35.71429
27       100.000000          0.00000           0.00000         0.00000
28         0.000000        100.00000         100.00000       100.00000
29        75.000000          0.00000           0.00000         0.00000
30         0.000000        100.00000         100.00000       100.00000
31       100.000000          0.00000           0.00000         0.00000
32       100.000000          0.00000           0.00000         0.00000
33        50.000000          0.00000           0.00000         0.00000
34         0.000000        100.00000         100.00000       100.00000
35         0.000000        100.00000         100.00000       100.00000
36         0.000000          0.00000           0.00000         0.00000
37         8.333333         25.00000          25.00000        25.00000
38         0.000000        100.00000         100.00000       100.00000
39         0.000000        100.00000         100.00000       100.00000
   Indri indri Lemur catta Lepilemur edwardsi Lepilemur microdon
1    100.00000   100.00000           0.000000          100.00000
2      0.00000     0.00000         100.000000            0.00000
3    100.00000   100.00000           0.000000          100.00000
4      0.00000     0.00000         100.000000            0.00000
5    100.00000   100.00000           0.000000          100.00000
6    100.00000   100.00000           0.000000          100.00000
7    100.00000   100.00000           0.000000          100.00000
8      0.00000     0.00000         100.000000            0.00000
9     57.14286    57.14286          42.857143           57.14286
10     0.00000     0.00000         100.000000            0.00000
11   100.00000   100.00000           0.000000          100.00000
12     0.00000   100.00000           0.000000            0.00000
13   100.00000   100.00000           0.000000          100.00000
14     0.00000     0.00000         100.000000            0.00000
15   100.00000   100.00000           0.000000          100.00000
16   100.00000   100.00000           0.000000          100.00000
17   100.00000   100.00000           0.000000          100.00000
18   100.00000   100.00000           0.000000          100.00000
19    30.43478   100.00000           0.000000           30.43478
20     0.00000     0.00000         100.000000            0.00000
21   100.00000   100.00000           0.000000          100.00000
22    40.00000    60.00000          40.000000           40.00000
23     0.00000     0.00000         100.000000            0.00000
24     0.00000   100.00000           0.000000            0.00000
25   100.00000   100.00000           0.000000          100.00000
26    35.71429    42.85714          57.142857           35.71429
27     0.00000     0.00000         100.000000            0.00000
28   100.00000   100.00000           0.000000          100.00000
29     0.00000    25.00000          75.000000            0.00000
30   100.00000   100.00000           0.000000          100.00000
31     0.00000     0.00000         100.000000            0.00000
32     0.00000     0.00000         100.000000            0.00000
33     0.00000    50.00000          50.000000            0.00000
34   100.00000   100.00000           0.000000          100.00000
35   100.00000   100.00000           0.000000          100.00000
36     0.00000     0.00000           0.000000            0.00000
37    25.00000    91.66667           8.333333           25.00000
38   100.00000   100.00000           0.000000          100.00000
39   100.00000   100.00000           0.000000          100.00000
   Lepilemur mustelinus Lepilemur septentrionalis Microcebus griseorufus
1                   100                  0.000000               0.000000
2                   100                100.000000               0.000000
3                   100                  0.000000               0.000000
4                   100                100.000000               0.000000
5                   100                  0.000000               0.000000
6                   100                  0.000000               0.000000
7                   100                  0.000000               0.000000
8                   100                100.000000               0.000000
9                   100                 42.857143               0.000000
10                  100                100.000000               0.000000
11                  100                  0.000000               0.000000
12                  100                  0.000000             100.000000
13                  100                  0.000000               0.000000
14                  100                100.000000               0.000000
15                  100                  0.000000               0.000000
16                  100                  0.000000               0.000000
17                  100                  0.000000               0.000000
18                  100                  0.000000               0.000000
19                  100                  0.000000              69.565217
20                  100                100.000000               0.000000
21                  100                  0.000000               0.000000
22                  100                 40.000000              20.000000
23                  100                100.000000               0.000000
24                  100                  0.000000             100.000000
25                  100                  0.000000               0.000000
26                  100                 57.142857               7.142857
27                  100                100.000000               0.000000
28                  100                  0.000000               0.000000
29                  100                 75.000000              25.000000
30                  100                  0.000000               0.000000
31                  100                100.000000               0.000000
32                  100                100.000000               0.000000
33                  100                 50.000000              50.000000
34                  100                  0.000000               0.000000
35                  100                  0.000000               0.000000
36                    0                  0.000000               0.000000
37                  100                  8.333333              66.666667
38                  100                  0.000000               0.000000
39                  100                  0.000000               0.000000
   Microcebus lehilahytsara Microcebus murinus Microcebus ravelobensis
1                 100.00000                100                0.000000
2                   0.00000                100              100.000000
3                 100.00000                100                0.000000
4                   0.00000                100              100.000000
5                 100.00000                100                0.000000
6                 100.00000                100                0.000000
7                 100.00000                100                0.000000
8                   0.00000                100              100.000000
9                  57.14286                100               42.857143
10                  0.00000                100              100.000000
11                100.00000                100                0.000000
12                  0.00000                100                0.000000
13                100.00000                100                0.000000
14                  0.00000                100              100.000000
15                100.00000                100                0.000000
16                100.00000                100                0.000000
17                100.00000                100                0.000000
18                100.00000                100                0.000000
19                 30.43478                100                0.000000
20                  0.00000                100              100.000000
21                100.00000                100                0.000000
22                 40.00000                100               40.000000
23                  0.00000                100              100.000000
24                  0.00000                100                0.000000
25                100.00000                100                0.000000
26                 35.71429                100               57.142857
27                  0.00000                100              100.000000
28                100.00000                100                0.000000
29                  0.00000                100               75.000000
30                100.00000                100                0.000000
31                  0.00000                100              100.000000
32                  0.00000                100              100.000000
33                  0.00000                100               50.000000
34                100.00000                100                0.000000
35                100.00000                100                0.000000
36                  0.00000                  0                0.000000
37                 25.00000                100                8.333333
38                100.00000                100                0.000000
39                100.00000                100                0.000000
   Microcebus rufus Phaner furcifer Propithecus candidus Propithecus coquereli
1         100.00000         0.00000            100.00000              0.000000
2           0.00000       100.00000              0.00000            100.000000
3         100.00000         0.00000            100.00000              0.000000
4           0.00000       100.00000              0.00000            100.000000
5         100.00000         0.00000            100.00000              0.000000
6         100.00000         0.00000            100.00000              0.000000
7         100.00000         0.00000            100.00000              0.000000
8           0.00000       100.00000              0.00000            100.000000
9          57.14286        42.85714             57.14286             42.857143
10          0.00000       100.00000              0.00000            100.000000
11        100.00000         0.00000            100.00000              0.000000
12          0.00000       100.00000              0.00000              0.000000
13        100.00000         0.00000            100.00000              0.000000
14          0.00000       100.00000              0.00000            100.000000
15        100.00000         0.00000            100.00000              0.000000
16        100.00000         0.00000            100.00000              0.000000
17        100.00000         0.00000            100.00000              0.000000
18        100.00000         0.00000            100.00000              0.000000
19         30.43478        69.56522             30.43478              0.000000
20          0.00000       100.00000              0.00000            100.000000
21        100.00000         0.00000            100.00000              0.000000
22         40.00000        60.00000             40.00000             40.000000
23          0.00000       100.00000              0.00000            100.000000
24          0.00000       100.00000              0.00000              0.000000
25        100.00000         0.00000            100.00000              0.000000
26         35.71429        64.28571             35.71429             57.142857
27          0.00000       100.00000              0.00000            100.000000
28        100.00000         0.00000            100.00000              0.000000
29          0.00000       100.00000              0.00000             75.000000
30        100.00000         0.00000            100.00000              0.000000
31          0.00000       100.00000              0.00000            100.000000
32          0.00000       100.00000              0.00000            100.000000
33          0.00000       100.00000              0.00000             50.000000
34        100.00000         0.00000            100.00000              0.000000
35        100.00000         0.00000            100.00000              0.000000
36          0.00000         0.00000              0.00000              0.000000
37         25.00000        75.00000             25.00000              8.333333
38        100.00000         0.00000            100.00000              0.000000
39        100.00000         0.00000            100.00000              0.000000
   Propithecus coronatus Propithecus deckenii Propithecus diadema
1               0.000000              0.00000           100.00000
2             100.000000            100.00000             0.00000
3               0.000000              0.00000           100.00000
4             100.000000            100.00000             0.00000
5               0.000000              0.00000           100.00000
6               0.000000              0.00000           100.00000
7               0.000000              0.00000           100.00000
8             100.000000            100.00000             0.00000
9              42.857143             42.85714            57.14286
10            100.000000            100.00000             0.00000
11              0.000000              0.00000           100.00000
12              0.000000            100.00000             0.00000
13              0.000000              0.00000           100.00000
14            100.000000            100.00000             0.00000
15              0.000000              0.00000           100.00000
16              0.000000              0.00000           100.00000
17              0.000000              0.00000           100.00000
18              0.000000              0.00000           100.00000
19              0.000000             69.56522            30.43478
20            100.000000            100.00000             0.00000
21              0.000000              0.00000           100.00000
22             40.000000             60.00000            40.00000
23            100.000000            100.00000             0.00000
24              0.000000            100.00000             0.00000
25              0.000000              0.00000           100.00000
26             57.142857             64.28571            35.71429
27            100.000000            100.00000             0.00000
28              0.000000              0.00000           100.00000
29             75.000000            100.00000             0.00000
30              0.000000              0.00000           100.00000
31            100.000000            100.00000             0.00000
32            100.000000            100.00000             0.00000
33             50.000000            100.00000             0.00000
34              0.000000              0.00000           100.00000
35              0.000000              0.00000           100.00000
36              0.000000              0.00000             0.00000
37              8.333333             75.00000            25.00000
38              0.000000              0.00000           100.00000
39              0.000000              0.00000           100.00000
   Propithecus edwardsi Propithecus tattersalli Propithecus verreauxi
1             100.00000                       0                   100
2               0.00000                       0                   100
3             100.00000                       0                   100
4               0.00000                       0                   100
5             100.00000                       0                   100
6             100.00000                       0                   100
7             100.00000                       0                   100
8               0.00000                       0                   100
9              57.14286                       0                   100
10              0.00000                       0                   100
11            100.00000                       0                   100
12              0.00000                       0                   100
13            100.00000                       0                   100
14              0.00000                       0                   100
15            100.00000                       0                   100
16            100.00000                       0                   100
17            100.00000                       0                   100
18            100.00000                       0                   100
19             30.43478                       0                   100
20              0.00000                       0                   100
21            100.00000                       0                   100
22             40.00000                       0                   100
23              0.00000                       0                   100
24              0.00000                       0                   100
25            100.00000                       0                   100
26             35.71429                       0                   100
27              0.00000                       0                   100
28            100.00000                       0                   100
29              0.00000                       0                   100
30            100.00000                       0                   100
31              0.00000                       0                   100
32              0.00000                       0                   100
33              0.00000                       0                   100
34            100.00000                       0                   100
35            100.00000                       0                   100
36              0.00000                       0                     0
37             25.00000                       0                   100
38            100.00000                       0                   100
39            100.00000                       0                   100
   Varecia rubra Varecia variegata
1      100.00000         100.00000
2        0.00000           0.00000
3      100.00000         100.00000
4        0.00000           0.00000
5      100.00000         100.00000
6      100.00000         100.00000
7      100.00000         100.00000
8        0.00000           0.00000
9       57.14286          57.14286
10       0.00000           0.00000
11     100.00000         100.00000
12       0.00000           0.00000
13     100.00000         100.00000
14       0.00000           0.00000
15     100.00000         100.00000
16     100.00000         100.00000
17     100.00000         100.00000
18     100.00000         100.00000
19      30.43478          30.43478
20       0.00000           0.00000
21     100.00000         100.00000
22      40.00000          40.00000
23       0.00000           0.00000
24       0.00000           0.00000
25     100.00000         100.00000
26      35.71429          35.71429
27       0.00000           0.00000
28     100.00000         100.00000
29       0.00000           0.00000
30     100.00000         100.00000
31       0.00000           0.00000
32       0.00000           0.00000
33       0.00000           0.00000
34     100.00000         100.00000
35     100.00000         100.00000
36       0.00000           0.00000
37      25.00000          25.00000
38     100.00000         100.00000
39     100.00000         100.00000
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("CoExClass", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("GeoClean")
> ### * GeoClean
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: GeoClean
> ### Title: Automated Cleaning of Geographic Coordinates
> ### Aliases: GeoClean
> ### Keywords: spatial manipl
> 
> ### ** Examples
> 
> data(lemurs_test)
> require(maptools)
Loading required package: maptools
Loading required package: sp
Checking rgeos availability: TRUE
> 
> #run all tests
> data(wrld_simpl)
> data(countryref)
> test <- GeoClean(lemurs_test, GBIFhead = TRUE,
+                  countrycentroid = TRUE, contthresh = 0.5,
+ 		 capitalcoords = TRUE, capthresh = 0.5,
+ 		 countrycheck = FALSE, outp = "cleaned")
> 
> insidecountry <- GeoClean(test, isna = FALSE, isnumeric = FALSE,
+                           coordinatevalidity = FALSE,
+ 			  containszero = FALSE, zerozero = FALSE,
+ 			  latequallong = FALSE, GBIFhead = FALSE,
+ 			  countrycentroid = FALSE,
+ 			  contthresh = 0.5, capitalcoords = FALSE,
+ 			  capthresh = 0.5, countrycheck = TRUE,
+ 			  polygons = wrld_simpl)
Warning in GeoClean(test, isna = FALSE, isnumeric = FALSE, coordinatevalidity = FALSE,  :
  unidentified country information test skipped and value set to TRUE without testing
> #outp = "detailed"
> test <- GeoClean(lemurs_test, GBIFhead = TRUE,
+                  countrycentroid = TRUE, contthresh = 0.5,
+ 		 capitalcoords = TRUE, capthresh = 0.5,
+ 		 countrycheck = FALSE, outp = "detailed")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("GeoClean", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching 'package:maptools', 'package:sp'

> nameEx("GetElevation")
> ### * GetElevation
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: GetElevation
> ### Title: Elevation Data for Multiple Species
> ### Aliases: GetElevation
> ### Keywords: IO spatial
> 
> ### ** Examples
> 
> data(lemurs)
> ## Not run: 
> ##D GetElevation(lemurs)
> ## End(Not run)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("GetElevation", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MapGrid")
> ### * MapGrid
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MapGrid
> ### Title: Plotting Rasters in the Geographical Context
> ### Aliases: MapGrid
> ### Keywords: spatial hplot
> 
> ### ** Examples
> 
> data(lemurs)
> data(mdg_poly)
> 
> inp <- ReadPoints(lemurs, mdg_poly)
> outp <- SpGeoCodH(inp)
> e <- c(42, 52, -27, -10)
> ras <- RichnessGrid(outp, e, reso = 60,  "abu")
> MapGrid(ras)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MapGrid", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MapRichness")
> ### * MapRichness
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MapRichness
> ### Title: Plotting Species Richness in a Set of Polygons
> ### Aliases: MapRichness
> ### Keywords: spatial hplot
> 
> ### ** Examples
> 
> data(lemurs)
> data(mdg_poly)
> 
> inp <- ReadPoints(lemurs, mdg_poly)
> outp <- SpGeoCodH(inp)
> MapRichness(outp)
class       : SpatialPolygonsDataFrame 
features    : 3 
extent      : 43.19906, 50.50903, -25.64502, -11.85583  (xmin, xmax, ymin, ymax)
coord. ref. : +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 
variables   : 6
names       :   ECO_NAME,   ECO_NAME, ident.add, sp.count,      code, ord 
min values  : Dry Forest, Dry Forest,         1,        8, #FF0000FF,   1 
max values  : Shrublands, Shrublands,         3,       24, #FFF000FF,   3 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MapRichness", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("PlotHull")
> ### * PlotHull
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: PlotHull
> ### Title: Plotting Species Ranges
> ### Aliases: PlotHull
> ### Keywords: spatial hplot
> 
> ### ** Examples
> 
> data("lemurs_in")
> dat <- CalcRange(data.frame(lemurs_in$identifier,
+                             lemurs_in$species_coordinates),
+                  value = "shape")
Warning in CalcRange(data.frame(lemurs_in$identifier, lemurs_in$species_coordinates),  :
  177 points were excluded due to duplicated coordinate
Warning in CalcRange(data.frame(lemurs_in$identifier, lemurs_in$species_coordinates),  :
  the following species have less than 3 occurrence, values set to NA:
 Daubentonia madagascariensis
 Eulemur collaris
 Eulemur rufifrons
 Eulemur rufus
 Eulemur sanfordi
 Lepilemur septentrionalis
 Microcebus griseorufus
 Microcebus lehilahytsara
 Microcebus ravelobensis
 Propithecus candidus
 Propithecus coronatus
 Propithecus deckenii
 Propithecus tattersalli
> PlotHull(dat, xlim = c(-130, -100), ylim = c(30,60))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("PlotHull", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("RangeRichness")
> ### * RangeRichness
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: RangeRichness
> ### Title: Species Richness Raster from Range Polygons
> ### Aliases: RangeRichness
> ### Keywords: spatial
> 
> ### ** Examples
> 
> data(lemurs)
> rang <- CalcRange(lemurs, value = "shape")
Warning in CalcRange(lemurs, value = "shape") :
  177 points were excluded due to duplicated coordinate
Warning in CalcRange(lemurs, value = "shape") :
  the following species have less than 3 occurrence, values set to NA:
 Daubentonia madagascariensis
 Eulemur collaris
 Eulemur rufifrons
 Eulemur rufus
 Eulemur sanfordi
 Lepilemur septentrionalis
 Microcebus griseorufus
 Microcebus lehilahytsara
 Microcebus ravelobensis
 Propithecus candidus
 Propithecus coronatus
 Propithecus deckenii
 Propithecus tattersalli
> sprich <- RangeRichness(rang)
> MapGrid(sprich)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("RangeRichness", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("ReadPoints")
> ### * ReadPoints
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ReadPoints
> ### Title: Loading Data into SpeciesgeocodeR
> ### Aliases: ReadPoints
> ### Keywords: IO
> 
> ### ** Examples
> 
> data(lemurs)
> data(mdg_poly)
> 
> inp <- ReadPoints(lemurs, mdg_poly)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ReadPoints", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("RichnessGrid")
> ### * RichnessGrid
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: RichnessGrid
> ### Title: Species Richness and Abundance Grids from Point Records
> ### Aliases: RichnessGrid
> ### Keywords: spatial
> 
> ### ** Examples
> 
> # for x = data.frame
> data(lemurs)
> e <- c(-125, -105, 30, 50)
> dat <- RichnessGrid(lemurs, e, reso = 60, type = "spnum")
> 
> # for x = character string
> e <- c(-125, -105, 30, 50)
> 
> ## Not run: 
> ##D dat <- RichnessGrid("Indri indri", e, reso = 60, type = "spnum")
> ## End(Not run)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("RichnessGrid", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("SpGeoCod")
> ### * SpGeoCod
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: SpGeoCod
> ### Title: Point to Polygon Classification from Text Files
> ### Aliases: SpGeoCod
> ### Keywords: spatial
> 
> ### ** Examples
> 
> data(lemurs)
> data(mdg_poly)
> 
> outp <- SpGeoCod(lemurs, mdg_poly)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("SpGeoCod", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("SpGeoCodH")
> ### * SpGeoCodH
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: SpGeoCodH
> ### Title: A Standard a SpeciesgeocodeR Area Classification
> ### Aliases: SpGeoCodH
> ### Keywords: spatial
> 
> ### ** Examples
> 
> data(lemurs)
> data(mdg_poly)
> 
> inp <- ReadPoints(lemurs, mdg_poly)
> outp <- SpGeoCodH(inp)
> names(outp)
[1] "identifier_in"          "species_coordinates_in" "polygons"              
[4] "sample_table"           "spec_table"             "polygon_table"         
[7] "not_classified_samples" "coexistence_classified" "areanam"               
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("SpGeoCodH", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("SpeciesGeoCoder")
> ### * SpeciesGeoCoder
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: SpeciesGeoCoder
> ### Title: A Complete SpeciesgeocodeR Analysis
> ### Aliases: SpeciesGeoCoder
> ### Keywords: spatial IO
> 
> ### ** Examples
> 
> ## Not run: 
> ##D data(lemurs)
> ##D data(mdg_poly)
> ##D SpeciesGeoCoder(lemurs, mdg_poly
> ## End(Not run)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("SpeciesGeoCoder", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Spgc2Biogeobears")
> ### * Spgc2Biogeobears
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Spgc2BioGeoBEARS
> ### Title: Geography Input for BioGeoBEARS
> ### Aliases: Spgc2BioGeoBEARS
> ### Keywords: datgen
> 
> ### ** Examples
> 
> ## Not run: 
> ##D data(lemurs)
> ##D data(mdg_poly)
> ##D 
> ##D outp <- SpGeoCod(lemurs, mdg_poly)
> ##D conv <- Spgc2BioGeoBEARS(outp)
> ## End(Not run)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Spgc2Biogeobears", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("WriteOut")
> ### * WriteOut
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: WriteOut
> ### Title: Write SpeciesgeocodeR results to the Working Directory
> ### Aliases: WriteOut
> ### Keywords: IO
> 
> ### ** Examples
> 
> ## Not run: 
> ##D data(lemurs)
> ##D data(mdg_poly)
> ##D 
> ##D inp <- ReadPoints(lemurs, mdg_poly)
> ##D outp <- SpGeoCodH(inp)
> ##D WriteOut(outp)
> ##D WriteOut(outp, writetype = "graphs")
> ##D WriteOut(outp, writetype = "statistics")
> ##D WriteOut(outp, writetype = "nexus")
> ##D WriteOut(outp, writetype = "coexistence")
> ## End(Not run)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("WriteOut", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("WwfLoad")
> ### * WwfLoad
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: WwfLoad
> ### Title: Load the WWF Terrestrial Ecoregions
> ### Aliases: WwfLoad
> 
> ### ** Examples
> 
> ## Not run: 
> ##D wwf_eco <- WwfLoad()
> ##D plot(wwf_eco)
> ##D names(wwf_eco)
> ## End(Not run)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("WwfLoad", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("countryref")
> ### * countryref
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: countryref
> ### Title: Country Centroids and Country Capitals
> ### Aliases: countryref
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(countryref)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("countryref", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("lemurs")
> ### * lemurs
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: lemurs
> ### Title: Distribution of Lemur Species
> ### Aliases: lemurs
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(lemurs)
> str(lemurs)
'data.frame':	403 obs. of  3 variables:
 $ identifier: Factor w/ 39 levels "Avahi laniger",..: 3 3 3 3 3 3 4 4 4 4 ...
 $ XCOOR     : num  47.4 49.1 48.5 48.4 48.8 ...
 $ YCOOR     : num  -21.3 -18 -18.7 -18.8 -18.7 ...
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("lemurs", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("lemurs_in")
> ### * lemurs_in
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: lemurs_in
> ### Title: Example for an spgeoIN Object
> ### Aliases: lemurs_in
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(lemurs_in)
> summary(lemurs_in)
$overall
[1] "39 species with 403 occurrence points and 3 input polygons."

$species_coordinates
     XCOOR           YCOOR       
 Min.   :43.62   Min.   :-25.00  
 1st Qu.:47.00   1st Qu.:-19.59  
 Median :48.25   Median :-18.47  
 Mean   :47.98   Mean   :-18.25  
 3rd Qu.:49.09   3rd Qu.:-15.70  
 Max.   :50.17   Max.   :-12.63  

$polygons
[1] "Dry Forest"   "Moist Forest" "Shrublands"  

> plot(lemurs_in)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("lemurs_in", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("lemurs_test")
> ### * lemurs_test
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: lemurs_test
> ### Title: Distribution of Lemur Species with Problematic Records
> ### Aliases: lemurs_test
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(lemurs_test)
> str(lemurs_test)
'data.frame':	627 obs. of  4 variables:
 $ identifier: Factor w/ 42 levels "Avahi laniger",..: 3 3 3 3 3 3 4 4 4 4 ...
 $ XCOOR     : num  47.4 49.1 48.5 48.4 48.8 ...
 $ YCOOR     : num  -21.3 -18 -18.7 -18.8 -18.7 ...
 $ country   : Factor w/ 1 level "MDG": 1 1 1 1 1 1 1 1 1 1 ...
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("lemurs_test", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("mdg_biomes")
> ### * mdg_biomes
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: mdg_biomes
> ### Title: WWF Biomes of Madagascar
> ### Aliases: mdg_biomes
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(mdg_biomes)
> str(mdg_biomes)
Formal class 'SpatialPolygonsDataFrame' [package "sp"] with 5 slots
  ..@ data       :'data.frame':	3 obs. of  2 variables:
  .. ..$ id  : int [1:3] 1 2 3
  .. ..$ name: Factor w/ 3 levels "Dry Forest","Moist Forest",..: 2 1 3
  .. ..- attr(*, "data_types")= chr [1:2] "N" "C"
  ..@ polygons   :List of 3
  .. ..$ :Formal class 'Polygons' [package "sp"] with 5 slots
  .. .. .. ..@ Polygons :List of 1
  .. .. .. .. ..$ :Formal class 'Polygon' [package "sp"] with 5 slots
  .. .. .. .. .. .. ..@ labpt  : num [1:2] 47.7 -19
  .. .. .. .. .. .. ..@ area   : num 27.9
  .. .. .. .. .. .. ..@ hole   : logi FALSE
  .. .. .. .. .. .. ..@ ringDir: int 1
  .. .. .. .. .. .. ..@ coords : num [1:28, 1:2] 50.2 47.2 46.7 46.6 46.9 ...
  .. .. .. ..@ plotOrder: int 1
  .. .. .. ..@ labpt    : num [1:2] 47.7 -19
  .. .. .. ..@ ID       : chr "0"
  .. .. .. ..@ area     : num 27.9
  .. ..$ :Formal class 'Polygons' [package "sp"] with 5 slots
  .. .. .. ..@ Polygons :List of 1
  .. .. .. .. ..$ :Formal class 'Polygon' [package "sp"] with 5 slots
  .. .. .. .. .. .. ..@ labpt  : num [1:2] 46.5 -16.6
  .. .. .. .. .. .. ..@ area   : num 14.2
  .. .. .. .. .. .. ..@ hole   : logi FALSE
  .. .. .. .. .. .. ..@ ringDir: int 1
  .. .. .. .. .. .. ..@ coords : num [1:33, 1:2] 50 49.4 49.1 48.4 48.5 ...
  .. .. .. ..@ plotOrder: int 1
  .. .. .. ..@ labpt    : num [1:2] 46.5 -16.6
  .. .. .. ..@ ID       : chr "1"
  .. .. .. ..@ area     : num 14.2
  .. ..$ :Formal class 'Polygons' [package "sp"] with 5 slots
  .. .. .. ..@ Polygons :List of 1
  .. .. .. .. ..$ :Formal class 'Polygon' [package "sp"] with 5 slots
  .. .. .. .. .. .. ..@ labpt  : num [1:2] 44.8 -23.1
  .. .. .. .. .. .. ..@ area   : num 11.2
  .. .. .. .. .. .. ..@ hole   : logi FALSE
  .. .. .. .. .. .. ..@ ringDir: int 1
  .. .. .. .. .. .. ..@ coords : num [1:26, 1:2] 46.7 45.3 44.4 43.7 43.6 ...
  .. .. .. ..@ plotOrder: int 1
  .. .. .. ..@ labpt    : num [1:2] 44.8 -23.1
  .. .. .. ..@ ID       : chr "2"
  .. .. .. ..@ area     : num 11.2
  ..@ plotOrder  : int [1:3] 1 2 3
  ..@ bbox       : num [1:2, 1:2] 43.2 -25.6 50.5 -11.9
  .. ..- attr(*, "dimnames")=List of 2
  .. .. ..$ : chr [1:2] "x" "y"
  .. .. ..$ : chr [1:2] "min" "max"
  ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slot
  .. .. ..@ projargs: chr NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("mdg_biomes", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("mdg_poly")
> ### * mdg_poly
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: mdg_poly
> ### Title: WWF Biomes of Madagascar in Table Format
> ### Aliases: mdg_poly
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(mdg_poly)
> str(mdg_poly)
'data.frame':	87 obs. of  3 variables:
 $ identifier: Factor w/ 3 levels "Dry Forest","Moist Forest",..: 2 2 2 2 2 2 2 2 2 2 ...
 $ XCOOR     : num  50.2 47.2 46.7 46.6 46.9 ...
 $ YCOOR     : num  -16 -24.9 -25.2 -24.4 -24.3 ...
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("mdg_poly", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("plot.spgeoIN")
> ### * plot.spgeoIN
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: plot.spgeoIN
> ### Title: Plot Method for SpgeoIN Objects
> ### Aliases: plot.spgeoIN
> ### Keywords: methods
> 
> ### ** Examples
> 
> data(lemurs)
> data(mdg_poly)
> 
> inp <- ReadPoints(lemurs, mdg_poly)
> plot(inp)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("plot.spgeoIN", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("plot.spgeoOUT")
> ### * plot.spgeoOUT
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: plot.spgeoOUT
> ### Title: Plot Method for SpgeoOUT Objects
> ### Aliases: plot.spgeoOUT
> ### Keywords: methods
> 
> ### ** Examples
> 
> data(lemurs)
> data(mdg_poly)
> 
> inp <- ReadPoints(lemurs, mdg_poly)
> outp <- SpGeoCodH(inp)
> plot(outp)
> plot(outp, plottype = "species")
> plot(outp, plottype = "polygons")
> plot(outp, plottype = "speciesrichness")
> plot(outp, plottype = "coexistence")
Warning in plot.spgeoOUT(outp, plottype = "coexistence") :
  no coexistence matrix found
> plot(outp, plottype = "mapspecies")
> plot(outp, plottype = "mappolygons")
> plot(outp, plottype = "mapunclassified")
> plot(outp, plottype = "mapall")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("plot.spgeoOUT", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("speciesgeocodeR-package")
> ### * speciesgeocodeR-package
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: speciesgeocodeR-package
> ### Title: Prepare Species Distributions for the Use in Phylogenetic
> ###   Analyses
> ### Aliases: speciesgeocodeR-package speciesgeocodeR
> ### Keywords: package
> 
> ### ** Examples
> 
> ## Not run: 
> ##D data(lemurs)
> ##D data(mdg_poly)
> ##D 
> ##D SpeciesGeoCoder(lemurs, mdg_poly)
> ##D conv <- Spgc2Biogeobears(outp)
> ## End(Not run)
> 
> data(lemurs)
> data(mdg_poly)
> inp <- ReadPoints(lemurs, mdg_poly)
> 
> outp <- SpGeoCodH(inp)
> e <- c(42, 52, -27, -10)
> ivesia_abu <- RichnessGrid(outp, e, reso = 60, type = "abu")
> 
> outp <- SpGeoCodH(inp)
> e <- c(42, 52, -27, -10)
> lemurs_div <- RichnessGrid(outp, e, reso = 60, type = "spnum")
> MapGrid(lemurs_div)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("speciesgeocodeR-package", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("summary.spgeoIN")
> ### * summary.spgeoIN
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: summary.spgeoIN
> ### Title: Summary Method for SpgeoIN
> ### Aliases: summary.spgeoIN
> ### Keywords: methods
> 
> ### ** Examples
> 
> data(lemurs)
> data(mdg_poly)
> inp <- ReadPoints(lemurs, mdg_poly)
> summary(inp)
$overall
[1] "39 species with 403 occurrence points and 3 input polygons."

$species_coordinates
     XCOOR           YCOOR       
 Min.   :43.62   Min.   :-25.00  
 1st Qu.:47.00   1st Qu.:-19.59  
 Median :48.25   Median :-18.47  
 Mean   :47.98   Mean   :-18.25  
 3rd Qu.:49.09   3rd Qu.:-15.70  
 Max.   :50.17   Max.   :-12.63  

$polygons
[1] "Dry Forest"   "Moist Forest" "Shrublands"  

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("summary.spgeoIN", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("summary.spgeoOUT")
> ### * summary.spgeoOUT
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: summary.spgeoOUT
> ### Title: Summary Method for SpgeoOUT
> ### Aliases: summary.spgeoOUT
> ### Keywords: methods
> 
> ### ** Examples
> 
> data(lemurs)
> data(mdg_poly)
> 
> inp <- ReadPoints(lemurs, mdg_poly)
> outp <- SpGeoCodH(inp)
> summary(outp)
$overall
[1] "39 species with 403 occurrence points and 3 input polygons."

$species_coordinates
     XCOOR           YCOOR       
 Min.   :43.62   Min.   :-25.00  
 1st Qu.:47.00   1st Qu.:-19.59  
 Median :48.25   Median :-18.47  
 Mean   :47.98   Mean   :-18.25  
 3rd Qu.:49.09   3rd Qu.:-15.70  
 Max.   :50.17   Max.   :-12.63  

$polygons
[1] "Dry Forest"   "Moist Forest" "Shrublands"  

$species_number_per_polygon
       [,1]
Mean     16
Median   16
Max      24
Min       8

$not_classified_samples
[1] "4 occurrences did not fall in any polygon"

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("summary.spgeoOUT", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  16.16 1.15 17.9 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
